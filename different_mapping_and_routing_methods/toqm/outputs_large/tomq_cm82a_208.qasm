//Note: initial mapping (logical qubit at each location): 7, 3, 0, -1, -1, 4, 5, 1, -1, -1, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 2, 7, 11, 1, 5, 6, 10, 0, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[1],q[0]; //cycle: 1 //cx q[3],q[7]
cx q[2],q[1]; //cycle: 3 //cx q[0],q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 5 //u3(0.000000, 0.000000, -0.785398) q[3]
swp q[0],q[1]; //cycle: 6
cx q[1],q[2]; //cycle: 12 //cx q[7],q[0]
cx q[1],q[0]; //cycle: 14 //cx q[7],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 14 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[7]
swp q[0],q[1]; //cycle: 17
cx q[2],q[1]; //cycle: 23 //cx q[0],q[3]
swp q[0],q[1]; //cycle: 25
cx q[1],q[2]; //cycle: 31 //cx q[7],q[0]
cx q[0],q[1]; //cycle: 33 //cx q[3],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 33 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 34 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 35 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 35 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 35 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[5],q[0]; //cycle: 36 //cx q[4],q[3]
cx q[6],q[1]; //cycle: 36 //cx q[5],q[7]
cx q[7],q[6]; //cycle: 38 //cx q[1],q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 40 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[1],q[7]; //cycle: 40 //cx q[7],q[1]
cx q[1],q[6]; //cycle: 42 //cx q[7],q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 42 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 44 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 44 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[7],q[6]; //cycle: 45 //cx q[1],q[5]
cx q[1],q[7]; //cycle: 47 //cx q[7],q[1]
cx q[6],q[1]; //cycle: 49 //cx q[5],q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 49 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 50 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 51 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 51 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 51 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[6],q[10]; //cycle: 52 //cx q[5],q[6]
cx q[11],q[6]; //cycle: 54 //cx q[2],q[5]
cx q[10],q[11]; //cycle: 56 //cx q[6],q[2]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 56 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[10],q[6]; //cycle: 58 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 58 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 60 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 60 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[11],q[6]; //cycle: 61 //cx q[2],q[5]
swp q[5],q[6]; //cycle: 63
cx q[10],q[11]; //cycle: 63 //cx q[6],q[2]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 65 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 66 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[2],q[6]; //cycle: 69 //cx q[0],q[4]
cx q[5],q[10]; //cycle: 69 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 71 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 71 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 71 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[5],q[10]; //cycle: 72 //cx q[5],q[6]
swp q[6],q[7]; //cycle: 73
swp q[0],q[1]; //cycle: 75
cx q[6],q[5]; //cycle: 79 //cx q[1],q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 81 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[10],q[6]; //cycle: 81 //cx q[6],q[1]
cx q[1],q[2]; //cycle: 81 //cx q[3],q[0]
cx q[10],q[5]; //cycle: 83 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 83 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[1],q[7]; //cycle: 83 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 83 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 85 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 85 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 85 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 85 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[6],q[5]; //cycle: 86 //cx q[1],q[5]
cx q[2],q[7]; //cycle: 86 //cx q[0],q[4]
cx q[10],q[6]; //cycle: 88 //cx q[6],q[1]
cx q[1],q[2]; //cycle: 88 //cx q[3],q[0]
cx q[5],q[10]; //cycle: 90 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 90 //u3(1.570796, 0.000000, 3.141593) q[1]
cx q[7],q[1]; //cycle: 90 //cx q[4],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 90 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 91 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 91 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 92 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 92 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 92 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 92 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 92 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(3.141593, 0.000000, 3.141593) q[5]; //cycle: 92 //u3(3.141593, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 93 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 93 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[11],q[5]; //cycle: 94 //cx q[2],q[5]
swp q[0],q[5]; //cycle: 96
swp q[6],q[11]; //cycle: 96
cx q[7],q[6]; //cycle: 102 //cx q[4],q[2]
cx q[10],q[5]; //cycle: 102 //cx q[6],q[7]
swp q[0],q[1]; //cycle: 103
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 104 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[11],q[10]; //cycle: 104 //cx q[1],q[6]
cx q[5],q[11]; //cycle: 106 //cx q[7],q[1]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 106 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[5],q[10]; //cycle: 108 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 108 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[1],q[7]; //cycle: 109 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 110 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 110 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[1],q[6]; //cycle: 111 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 111 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[11],q[10]; //cycle: 111 //cx q[1],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 113 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 113 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[5],q[11]; //cycle: 113 //cx q[7],q[1]
cx q[7],q[6]; //cycle: 114 //cx q[4],q[2]
cx q[10],q[5]; //cycle: 115 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 115 //u3(1.570796, 0.000000, 3.141593) q[1]
cx q[1],q[7]; //cycle: 116 //cx q[5],q[4]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 117 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(3.141593, 0.000000, 3.141593) q[10]; //cycle: 117 //u3(3.141593, 0.000000, 3.141593) q[6]
cx q[6],q[1]; //cycle: 118 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 118 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 118 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 119 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[10],q[5]; //cycle: 119 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 120 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 120 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 120 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 121 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[10]; //cycle: 122 //cx q[2],q[6]
cx q[5],q[6]; //cycle: 124 //cx q[7],q[2]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 124 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[5],q[10]; //cycle: 126 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 126 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 128 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 128 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[10]; //cycle: 129 //cx q[2],q[6]
cx q[5],q[6]; //cycle: 131 //cx q[7],q[2]
cx q[10],q[5]; //cycle: 133 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 133 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 134 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 135 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 135 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[6],q[1]; //cycle: 135 //cx q[2],q[5]
cx q[10],q[5]; //cycle: 136 //cx q[6],q[7]
cx q[7],q[6]; //cycle: 137 //cx q[4],q[2]
cx q[1],q[7]; //cycle: 139 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 139 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[1],q[6]; //cycle: 141 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 141 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 143 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 143 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[7],q[6]; //cycle: 144 //cx q[4],q[2]
cx q[1],q[7]; //cycle: 146 //cx q[5],q[4]
cx q[6],q[1]; //cycle: 148 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 148 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 149 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 150 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 150 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[1]; //cycle: 151 //cx q[2],q[5]
swp q[0],q[1]; //cycle: 153
cx q[7],q[1]; //cycle: 159 //cx q[4],q[3]
cx q[2],q[7]; //cycle: 161 //cx q[0],q[4]
cx q[1],q[2]; //cycle: 163 //cx q[3],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 163 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[1],q[7]; //cycle: 165 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 165 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 167 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 167 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[7]; //cycle: 168 //cx q[0],q[4]
cx q[1],q[2]; //cycle: 170 //cx q[3],q[0]
cx q[7],q[1]; //cycle: 172 //cx q[4],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 172 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 173 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 174 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 174 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 174 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 175 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[6]; //cycle: 176 //cx q[4],q[2]
swp q[0],q[1]; //cycle: 177
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 178 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[1],q[7]; //cycle: 183 //cx q[5],q[4]
cx q[1],q[6]; //cycle: 185 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 185 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 187 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 187 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[7],q[6]; //cycle: 188 //cx q[4],q[2]
cx q[1],q[7]; //cycle: 190 //cx q[5],q[4]
cx q[6],q[1]; //cycle: 192 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 192 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 193 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 194 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 194 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 194 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 195 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[10]; //cycle: 196 //cx q[2],q[6]
cx q[5],q[6]; //cycle: 198 //cx q[7],q[2]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 198 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[5],q[10]; //cycle: 200 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 200 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 202 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 202 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[10]; //cycle: 203 //cx q[2],q[6]
cx q[5],q[6]; //cycle: 205 //cx q[7],q[2]
cx q[10],q[5]; //cycle: 207 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 207 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 208 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 209 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 209 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[6],q[1]; //cycle: 209 //cx q[2],q[5]
cx q[7],q[6]; //cycle: 211 //cx q[4],q[2]
cx q[1],q[7]; //cycle: 213 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 213 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[1],q[6]; //cycle: 215 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 215 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 217 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 217 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[7],q[6]; //cycle: 218 //cx q[4],q[2]
cx q[1],q[7]; //cycle: 220 //cx q[5],q[4]
cx q[6],q[1]; //cycle: 222 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 222 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 223 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 224 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 224 //u3(0.000000, 0.000000, 0.785398) q[5]
swp q[0],q[1]; //cycle: 225
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 225 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[0],q[5]; //cycle: 231
cx q[1],q[7]; //cycle: 231 //cx q[3],q[4]
cx q[2],q[1]; //cycle: 233 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 235 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 235 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[5],q[10]; //cycle: 237 //cx q[5],q[6]
cx q[7],q[1]; //cycle: 237 //cx q[4],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 237 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[6],q[5]; //cycle: 239 //cx q[2],q[5]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 239 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 239 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[1]; //cycle: 240 //cx q[0],q[3]
cx q[10],q[6]; //cycle: 241 //cx q[6],q[2]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 241 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 242 //cx q[4],q[0]
cx q[10],q[5]; //cycle: 243 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 243 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[1],q[7]; //cycle: 244 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 244 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 245 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 245 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 245 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[6],q[5]; //cycle: 246 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 246 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 246 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 246 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 247 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[10],q[6]; //cycle: 248 //cx q[6],q[2]
cx q[5],q[10]; //cycle: 250 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 250 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 251 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 252 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 252 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[6],q[5]; //cycle: 253 //cx q[2],q[5]
cx q[1],q[6]; //cycle: 255 //cx q[3],q[2]
swp q[0],q[1]; //cycle: 257
swp q[5],q[10]; //cycle: 257
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 257 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[0],q[5]; //cycle: 263
cx q[0],q[1]; //cycle: 269 //cx q[6],q[7]
cx q[10],q[5]; //cycle: 269 //cx q[5],q[3]
cx q[10],q[6]; //cycle: 271 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 271 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 273 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 273 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[5],q[6]; //cycle: 274 //cx q[3],q[2]
cx q[10],q[5]; //cycle: 276 //cx q[5],q[3]
cx q[6],q[10]; //cycle: 278 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 278 //u3(1.570796, 0.000000, 3.141593) q[3]
swp q[0],q[1]; //cycle: 279
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 279 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 280 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 280 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 280 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 281 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[1]; //cycle: 285 //cx q[2],q[6]
swp q[5],q[6]; //cycle: 287
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 287 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[0],q[5]; //cycle: 293 //cx q[7],q[2]
cx q[0],q[1]; //cycle: 295 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 295 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 297 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 297 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[1],q[6]; //cycle: 298
cx q[5],q[6]; //cycle: 304 //cx q[2],q[6]
cx q[0],q[5]; //cycle: 306 //cx q[7],q[2]
swp q[1],q[6]; //cycle: 307
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 308 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 309 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[10]; //cycle: 310 //cx q[2],q[5]
cx q[1],q[0]; //cycle: 313 //cx q[6],q[7]
cx q[6],q[5]; //cycle: 313 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 315 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 315 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[10],q[6]; //cycle: 315 //cx q[5],q[3]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 315 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[1],q[0]; //cycle: 316 //cx q[6],q[7]
cx q[10],q[5]; //cycle: 317 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 317 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 319 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 319 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 320 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 322 //cx q[5],q[3]
cx q[5],q[10]; //cycle: 324 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 324 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 325 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 326 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 326 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[7]; //cycle: 326 //cx q[3],q[4]
cx q[5],q[10]; //cycle: 327 //cx q[2],q[5]
cx q[2],q[6]; //cycle: 328 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 330 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 330 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[7],q[6]; //cycle: 332 //cx q[4],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 332 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 334 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 334 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[6]; //cycle: 335 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 337 //cx q[4],q[0]
cx q[6],q[7]; //cycle: 339 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 339 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 340 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 341 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 341 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 342 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[6],q[5]; //cycle: 343 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 345 //cx q[5],q[3]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 345 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[10],q[5]; //cycle: 347 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 347 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 349 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 349 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 350 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 352 //cx q[5],q[3]
cx q[5],q[10]; //cycle: 354 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 354 //u3(1.570796, 0.000000, 3.141593) q[3]
swp q[0],q[1]; //cycle: 355
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 355 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 356 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 356 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 356 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 357 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[0]; //cycle: 361 //cx q[2],q[6]
swp q[5],q[6]; //cycle: 363
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 363 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[1],q[6]; //cycle: 369 //cx q[7],q[2]
cx q[1],q[0]; //cycle: 371 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 371 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[5],q[6]; //cycle: 372
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 373 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 373 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[5],q[0]; //cycle: 378 //cx q[2],q[6]
swp q[1],q[6]; //cycle: 379
cx q[6],q[5]; //cycle: 385 //cx q[7],q[2]
swp q[1],q[6]; //cycle: 387
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 387 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 388 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[10]; //cycle: 389 //cx q[2],q[5]
cx q[0],q[1]; //cycle: 393 //cx q[6],q[7]
cx q[6],q[5]; //cycle: 393 //cx q[3],q[2]
u3(3.141593, 0.000000, 3.141593) q[0]; //cycle: 395 //u3(3.141593, 0.000000, 3.141593) q[6]
u3(3.141593, 0.000000, 3.141593) q[1]; //cycle: 395 //u3(3.141593, 0.000000, 3.141593) q[7]
cx q[10],q[6]; //cycle: 395 //cx q[5],q[3]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 395 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 396 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[10],q[5]; //cycle: 397 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 397 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 399 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 399 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 400 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 402 //cx q[5],q[3]
cx q[5],q[10]; //cycle: 404 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 404 //u3(1.570796, 0.000000, 3.141593) q[3]
cx q[6],q[11]; //cycle: 405 //cx q[3],q[1]
u3(3.141593, 0.000000, 3.141593) q[10]; //cycle: 406 //u3(3.141593, 0.000000, 3.141593) q[5]
swp q[0],q[5]; //cycle: 407
swp q[11],q[12]; //cycle: 407
u3(3.141593, 0.000000, 3.141593) q[6]; //cycle: 407 //u3(3.141593, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 407 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 408 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[1],q[0]; //cycle: 413 //cx q[7],q[2]
cx q[7],q[12]; //cycle: 413 //cx q[4],q[1]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 415 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 415 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 415 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[6],q[7]; //cycle: 416 //cx q[3],q[4]
cx q[2],q[6]; //cycle: 418 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 420 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 420 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[7],q[6]; //cycle: 422 //cx q[4],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 422 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 424 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 424 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[6]; //cycle: 425 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 427 //cx q[4],q[0]
cx q[6],q[7]; //cycle: 429 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 429 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 430 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 431 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 431 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 431 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[7],q[1]; //cycle: 432 //cx q[4],q[7]
cx q[2],q[7]; //cycle: 434 //cx q[0],q[4]
cx q[1],q[2]; //cycle: 436 //cx q[7],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 436 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[1],q[7]; //cycle: 438 //cx q[7],q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 438 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 440 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 440 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[7]; //cycle: 441 //cx q[0],q[4]
cx q[1],q[2]; //cycle: 443 //cx q[7],q[0]
cx q[7],q[1]; //cycle: 445 //cx q[4],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 445 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 446 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(3.141593, 0.000000, 3.141593) q[7]; //cycle: 447 //u3(3.141593, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 447 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 447 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[0],q[5]; //cycle: 448
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 448 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[6],q[7]; //cycle: 449 //cx q[3],q[4]
cx q[2],q[6]; //cycle: 451 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 453 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 453 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[5],q[10]; //cycle: 454 //cx q[2],q[5]
cx q[0],q[1]; //cycle: 454 //cx q[6],q[7]
cx q[7],q[6]; //cycle: 455 //cx q[4],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 455 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 457 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 457 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[6]; //cycle: 458 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 460 //cx q[4],q[0]
cx q[6],q[7]; //cycle: 462 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 462 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 463 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 464 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 464 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 464 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 465 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[6],q[5]; //cycle: 466 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 468 //cx q[5],q[3]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 468 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[10],q[5]; //cycle: 470 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 470 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 472 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 472 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 473 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 475 //cx q[5],q[3]
cx q[5],q[10]; //cycle: 477 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 477 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 478 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 479 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 479 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 479 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 480 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[0]; //cycle: 481 //cx q[2],q[6]
swp q[5],q[6]; //cycle: 483
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 483 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[1],q[6]; //cycle: 489 //cx q[7],q[2]
cx q[1],q[0]; //cycle: 491 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 491 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[5],q[6]; //cycle: 492
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 493 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 493 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[5],q[0]; //cycle: 498 //cx q[2],q[6]
swp q[1],q[6]; //cycle: 499
cx q[6],q[5]; //cycle: 505 //cx q[7],q[2]
swp q[1],q[6]; //cycle: 507
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 507 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 508 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[10]; //cycle: 509 //cx q[2],q[5]
cx q[0],q[1]; //cycle: 513 //cx q[6],q[7]
cx q[6],q[5]; //cycle: 513 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 515 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 515 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[10],q[6]; //cycle: 515 //cx q[5],q[3]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 515 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[0],q[1]; //cycle: 516 //cx q[6],q[7]
cx q[10],q[5]; //cycle: 517 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 517 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 519 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 519 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 520 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 522 //cx q[5],q[3]
cx q[5],q[10]; //cycle: 524 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 524 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 525 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 526 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 526 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[7]; //cycle: 526 //cx q[3],q[4]
cx q[5],q[10]; //cycle: 527 //cx q[2],q[5]
cx q[2],q[6]; //cycle: 528 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 530 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 530 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[7],q[6]; //cycle: 532 //cx q[4],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 532 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 534 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 534 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[6]; //cycle: 535 //cx q[0],q[3]
cx q[7],q[2]; //cycle: 537 //cx q[4],q[0]
cx q[6],q[7]; //cycle: 539 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 539 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 540 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 541 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 541 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 541 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 542 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[6],q[5]; //cycle: 543 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 545 //cx q[5],q[3]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 545 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[10],q[5]; //cycle: 547 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 547 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 549 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 549 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 550 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 552 //cx q[5],q[3]
cx q[5],q[10]; //cycle: 554 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 554 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 555 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 556 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 556 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 556 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 557 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[0]; //cycle: 558 //cx q[2],q[6]
swp q[5],q[6]; //cycle: 560
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 560 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[1],q[6]; //cycle: 566 //cx q[7],q[2]
cx q[1],q[0]; //cycle: 568 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 568 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[5],q[6]; //cycle: 569
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 570 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 570 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[5],q[0]; //cycle: 575 //cx q[2],q[6]
swp q[1],q[6]; //cycle: 576
cx q[6],q[5]; //cycle: 582 //cx q[7],q[2]
swp q[1],q[6]; //cycle: 584
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 584 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 585 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[10]; //cycle: 586 //cx q[2],q[5]
cx q[0],q[1]; //cycle: 590 //cx q[6],q[7]
cx q[6],q[5]; //cycle: 590 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 592 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 592 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[10],q[6]; //cycle: 592 //cx q[5],q[3]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 592 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[0],q[1]; //cycle: 593 //cx q[6],q[7]
cx q[10],q[5]; //cycle: 594 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 594 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 596 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 596 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 597 //cx q[3],q[2]
cx q[10],q[6]; //cycle: 599 //cx q[5],q[3]
cx q[5],q[10]; //cycle: 601 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 601 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 602 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 603 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 603 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[7],q[6]; //cycle: 603 //cx q[4],q[3]
cx q[5],q[10]; //cycle: 604 //cx q[2],q[5]
cx q[2],q[7]; //cycle: 605 //cx q[0],q[4]
cx q[6],q[2]; //cycle: 607 //cx q[3],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 607 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[7]; //cycle: 609 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 609 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 611 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 611 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[7]; //cycle: 612 //cx q[0],q[4]
cx q[6],q[2]; //cycle: 614 //cx q[3],q[0]
cx q[7],q[6]; //cycle: 616 //cx q[4],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 616 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 617 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 618 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 618 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 618 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 619 //u3(0.000000, 0.000000, 0.785398) q[4]
swp q[6],q[7]; //cycle: 620
cx q[6],q[5]; //cycle: 626 //cx q[4],q[2]
cx q[10],q[6]; //cycle: 628 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 628 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[10],q[5]; //cycle: 630 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 630 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 632 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 632 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 633 //cx q[4],q[2]
cx q[10],q[6]; //cycle: 635 //cx q[5],q[4]
cx q[5],q[10]; //cycle: 637 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 637 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 638 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 639 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 639 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 639 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 640 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[0]; //cycle: 641 //cx q[2],q[6]
swp q[5],q[6]; //cycle: 643
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 643 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[1],q[6]; //cycle: 649 //cx q[7],q[2]
cx q[1],q[0]; //cycle: 651 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 651 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[5],q[6]; //cycle: 652
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 653 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 653 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[5],q[0]; //cycle: 658 //cx q[2],q[6]
swp q[1],q[6]; //cycle: 659
cx q[6],q[5]; //cycle: 665 //cx q[7],q[2]
swp q[1],q[6]; //cycle: 667
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 667 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 668 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[10]; //cycle: 669 //cx q[2],q[5]
cx q[0],q[1]; //cycle: 673 //cx q[6],q[7]
cx q[6],q[5]; //cycle: 673 //cx q[4],q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 675 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 675 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[10],q[6]; //cycle: 675 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 675 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[0],q[1]; //cycle: 676 //cx q[6],q[7]
cx q[10],q[5]; //cycle: 677 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 677 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 679 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 679 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 680 //cx q[4],q[2]
cx q[10],q[6]; //cycle: 682 //cx q[5],q[4]
cx q[5],q[10]; //cycle: 684 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 684 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 685 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 686 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 686 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[7]; //cycle: 686 //cx q[4],q[3]
cx q[5],q[10]; //cycle: 687 //cx q[2],q[5]
cx q[2],q[6]; //cycle: 688 //cx q[0],q[4]
cx q[7],q[2]; //cycle: 690 //cx q[3],q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 690 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[6]; //cycle: 692 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 692 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 694 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 694 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[6]; //cycle: 695 //cx q[0],q[4]
cx q[7],q[2]; //cycle: 697 //cx q[3],q[0]
cx q[6],q[7]; //cycle: 699 //cx q[4],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 699 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 701 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 702 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[6],q[5]; //cycle: 703 //cx q[4],q[2]
cx q[10],q[6]; //cycle: 705 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 705 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[10],q[5]; //cycle: 707 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 707 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 709 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 709 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[5]; //cycle: 710 //cx q[4],q[2]
cx q[10],q[6]; //cycle: 712 //cx q[5],q[4]
cx q[5],q[10]; //cycle: 714 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 714 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 715 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 716 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 716 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 716 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 717 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[5],q[0]; //cycle: 718 //cx q[2],q[6]
swp q[5],q[6]; //cycle: 720
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 720 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[1],q[6]; //cycle: 726 //cx q[7],q[2]
cx q[1],q[0]; //cycle: 728 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 728 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 730 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 730 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[0],q[5]; //cycle: 731
cx q[6],q[5]; //cycle: 737 //cx q[2],q[6]
cx q[1],q[6]; //cycle: 739 //cx q[7],q[2]
swp q[0],q[5]; //cycle: 740
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 741 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 742 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[10]; //cycle: 743 //cx q[2],q[5]
cx q[0],q[1]; //cycle: 746 //cx q[6],q[7]
cx q[5],q[6]; //cycle: 746 //cx q[4],q[2]
cx q[10],q[5]; //cycle: 748 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 748 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[10],q[6]; //cycle: 750 //cx q[5],q[2]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 750 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 752 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 752 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[5],q[6]; //cycle: 753 //cx q[4],q[2]
cx q[10],q[5]; //cycle: 755 //cx q[5],q[4]
cx q[6],q[10]; //cycle: 757 //cx q[2],q[5]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 757 //u3(1.570796, 0.000000, 3.141593) q[4]
//650 original gates
//694 gates in generated circuit
//571 original depth (cycles)
//759 depth of generated circuit
//499558 nodes popped from queue for processing.
//999 nodes remain in queue.
