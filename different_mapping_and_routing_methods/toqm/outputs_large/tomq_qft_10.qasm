//Note: initial mapping (logical qubit at each location): 1, 0, 2, 5, 7, 6, 3, 4, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 1, 0, 2, 6, 7, 3, 5, 4, 8, 9, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, -0.785400) q[1]; //cycle: 1 //u3(0.000000, 0.000000, -0.785400) q[0]
cx q[1],q[0]; //cycle: 2 //cx q[0],q[1]
u3(0.000000, 0.000000, 0.785400) q[1]; //cycle: 4 //u3(0.000000, 0.000000, 0.785400) q[0]
cx q[1],q[0]; //cycle: 5 //cx q[0],q[1]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 7 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, -0.392700) q[1]; //cycle: 7 //u3(0.000000, 0.000000, -0.392700) q[0]
u3(0.000000, 0.000000, -0.785400) q[0]; //cycle: 8 //u3(0.000000, 0.000000, -0.785400) q[1]
cx q[1],q[2]; //cycle: 8 //cx q[0],q[2]
u3(0.000000, 0.000000, 0.392700) q[1]; //cycle: 10 //u3(0.000000, 0.000000, 0.392700) q[0]
cx q[1],q[2]; //cycle: 11 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.196350) q[1]; //cycle: 13 //u3(0.000000, 0.000000, -0.196350) q[0]
cx q[1],q[6]; //cycle: 14 //cx q[0],q[3]
u3(0.000000, 0.000000, 0.196350) q[1]; //cycle: 16 //u3(0.000000, 0.000000, 0.196350) q[0]
cx q[1],q[6]; //cycle: 17 //cx q[0],q[3]
u3(0.000000, 0.000000, -0.098150) q[1]; //cycle: 19 //u3(0.000000, 0.000000, -0.098150) q[0]
cx q[1],q[7]; //cycle: 20 //cx q[0],q[4]
u3(0.000000, 0.000000, 0.098150) q[1]; //cycle: 22 //u3(0.000000, 0.000000, 0.098150) q[0]
cx q[1],q[7]; //cycle: 23 //cx q[0],q[4]
u3(0.000000, 0.000000, -0.049100) q[1]; //cycle: 25 //u3(0.000000, 0.000000, -0.049100) q[0]
swp q[1],q[2]; //cycle: 26
cx q[0],q[1]; //cycle: 32 //cx q[1],q[2]
cx q[2],q[3]; //cycle: 32 //cx q[0],q[5]
u3(0.000000, 0.000000, 0.785400) q[0]; //cycle: 34 //u3(0.000000, 0.000000, 0.785400) q[1]
u3(0.000000, 0.000000, 0.049100) q[2]; //cycle: 34 //u3(0.000000, 0.000000, 0.049100) q[0]
cx q[0],q[1]; //cycle: 35 //cx q[1],q[2]
cx q[2],q[3]; //cycle: 35 //cx q[0],q[5]
swp q[5],q[6]; //cycle: 36
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 37 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, -0.392700) q[0]; //cycle: 37 //u3(0.000000, 0.000000, -0.392700) q[1]
u3(0.000000, 0.000000, -0.024550) q[2]; //cycle: 37 //u3(0.000000, 0.000000, -0.024550) q[0]
u3(0.000000, 0.000000, -0.785400) q[1]; //cycle: 38 //u3(0.000000, 0.000000, -0.785400) q[2]
cx q[0],q[5]; //cycle: 42 //cx q[1],q[3]
cx q[2],q[6]; //cycle: 42 //cx q[0],q[6]
u3(0.000000, 0.000000, 0.392700) q[0]; //cycle: 44 //u3(0.000000, 0.000000, 0.392700) q[1]
u3(0.000000, 0.000000, 0.024550) q[2]; //cycle: 44 //u3(0.000000, 0.000000, 0.024550) q[0]
cx q[0],q[5]; //cycle: 45 //cx q[1],q[3]
cx q[2],q[6]; //cycle: 45 //cx q[0],q[6]
swp q[1],q[7]; //cycle: 46
u3(0.000000, 0.000000, -0.196350) q[0]; //cycle: 47 //u3(0.000000, 0.000000, -0.196350) q[1]
u3(0.000000, 0.000000, -0.012250) q[2]; //cycle: 47 //u3(0.000000, 0.000000, -0.012250) q[0]
swp q[5],q[6]; //cycle: 48
swp q[2],q[3]; //cycle: 49
cx q[0],q[1]; //cycle: 52 //cx q[1],q[4]
cx q[7],q[6]; //cycle: 54 //cx q[2],q[3]
u3(0.000000, 0.000000, 0.196350) q[0]; //cycle: 54 //u3(0.000000, 0.000000, 0.196350) q[1]
cx q[3],q[4]; //cycle: 55 //cx q[0],q[7]
cx q[0],q[1]; //cycle: 55 //cx q[1],q[4]
u3(0.000000, 0.000000, 0.785400) q[7]; //cycle: 56 //u3(0.000000, 0.000000, 0.785400) q[2]
swp q[1],q[2]; //cycle: 57
u3(0.000000, 0.000000, 0.012250) q[3]; //cycle: 57 //u3(0.000000, 0.000000, 0.012250) q[0]
cx q[7],q[6]; //cycle: 57 //cx q[2],q[3]
u3(0.000000, 0.000000, -0.098150) q[0]; //cycle: 57 //u3(0.000000, 0.000000, -0.098150) q[1]
cx q[3],q[4]; //cycle: 58 //cx q[0],q[7]
u3(0.000000, 0.000000, -0.392700) q[7]; //cycle: 59 //u3(0.000000, 0.000000, -0.392700) q[2]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 59 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, -0.006150) q[3]; //cycle: 60 //u3(0.000000, 0.000000, -0.006150) q[0]
u3(0.000000, 0.000000, -0.785400) q[6]; //cycle: 60 //u3(0.000000, 0.000000, -0.785400) q[3]
cx q[3],q[8]; //cycle: 61 //cx q[0],q[8]
u3(0.000000, 0.000000, 0.006150) q[3]; //cycle: 63 //u3(0.000000, 0.000000, 0.006150) q[0]
cx q[0],q[1]; //cycle: 63 //cx q[1],q[5]
cx q[7],q[2]; //cycle: 63 //cx q[2],q[4]
cx q[3],q[8]; //cycle: 64 //cx q[0],q[8]
u3(0.000000, 0.000000, 0.392700) q[7]; //cycle: 65 //u3(0.000000, 0.000000, 0.392700) q[2]
u3(0.000000, 0.000000, 0.098150) q[0]; //cycle: 65 //u3(0.000000, 0.000000, 0.098150) q[1]
u3(0.000000, 0.000000, -0.003050) q[3]; //cycle: 66 //u3(0.000000, 0.000000, -0.003050) q[0]
cx q[7],q[2]; //cycle: 66 //cx q[2],q[4]
cx q[0],q[1]; //cycle: 66 //cx q[1],q[5]
cx q[3],q[9]; //cycle: 67 //cx q[0],q[9]
u3(0.000000, 0.000000, -0.196350) q[7]; //cycle: 68 //u3(0.000000, 0.000000, -0.196350) q[2]
cx q[6],q[2]; //cycle: 68 //cx q[3],q[4]
u3(0.000000, 0.000000, -0.049100) q[0]; //cycle: 68 //u3(0.000000, 0.000000, -0.049100) q[1]
cx q[7],q[1]; //cycle: 69 //cx q[2],q[5]
cx q[0],q[5]; //cycle: 69 //cx q[1],q[6]
u3(0.000000, 0.000000, 0.003050) q[3]; //cycle: 69 //u3(0.000000, 0.000000, 0.003050) q[0]
cx q[3],q[9]; //cycle: 70 //cx q[0],q[9]
u3(0.000000, 0.000000, 0.785400) q[6]; //cycle: 70 //u3(0.000000, 0.000000, 0.785400) q[3]
u3(0.000000, 0.000000, 0.196350) q[7]; //cycle: 71 //u3(0.000000, 0.000000, 0.196350) q[2]
cx q[6],q[2]; //cycle: 71 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.049100) q[0]; //cycle: 71 //u3(0.000000, 0.000000, 0.049100) q[1]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 72 //u3(1.570796, 0.000000, 3.141593) q[0]
cx q[7],q[1]; //cycle: 72 //cx q[2],q[5]
cx q[0],q[5]; //cycle: 72 //cx q[1],q[6]
swp q[3],q[4]; //cycle: 73
u3(0.000000, 0.000000, -0.392700) q[6]; //cycle: 73 //u3(0.000000, 0.000000, -0.392700) q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 73 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[6],q[1]; //cycle: 74 //cx q[3],q[5]
u3(0.000000, 0.000000, -0.785400) q[2]; //cycle: 74 //u3(0.000000, 0.000000, -0.785400) q[4]
u3(0.000000, 0.000000, -0.024550) q[0]; //cycle: 74 //u3(0.000000, 0.000000, -0.024550) q[1]
u3(0.000000, 0.000000, -0.098150) q[7]; //cycle: 74 //u3(0.000000, 0.000000, -0.098150) q[2]
swp q[0],q[1]; //cycle: 76
u3(0.000000, 0.000000, 0.392700) q[6]; //cycle: 76 //u3(0.000000, 0.000000, 0.392700) q[3]
swp q[5],q[6]; //cycle: 77
swp q[1],q[2]; //cycle: 82
cx q[5],q[0]; //cycle: 83 //cx q[3],q[5]
cx q[7],q[6]; //cycle: 83 //cx q[2],q[6]
u3(0.000000, 0.000000, -0.196350) q[5]; //cycle: 85 //u3(0.000000, 0.000000, -0.196350) q[3]
u3(0.000000, 0.000000, 0.098150) q[7]; //cycle: 85 //u3(0.000000, 0.000000, 0.098150) q[2]
cx q[7],q[6]; //cycle: 86 //cx q[2],q[6]
cx q[1],q[0]; //cycle: 88 //cx q[4],q[5]
u3(0.000000, 0.000000, -0.049100) q[7]; //cycle: 88 //u3(0.000000, 0.000000, -0.049100) q[2]
cx q[5],q[6]; //cycle: 88 //cx q[3],q[6]
cx q[2],q[3]; //cycle: 88 //cx q[1],q[7]
u3(0.000000, 0.000000, 0.785400) q[1]; //cycle: 90 //u3(0.000000, 0.000000, 0.785400) q[4]
u3(0.000000, 0.000000, 0.196350) q[5]; //cycle: 90 //u3(0.000000, 0.000000, 0.196350) q[3]
u3(0.000000, 0.000000, 0.024550) q[2]; //cycle: 90 //u3(0.000000, 0.000000, 0.024550) q[1]
cx q[1],q[0]; //cycle: 91 //cx q[4],q[5]
cx q[5],q[6]; //cycle: 91 //cx q[3],q[6]
cx q[2],q[3]; //cycle: 91 //cx q[1],q[7]
swp q[7],q[8]; //cycle: 92
u3(0.000000, 0.000000, -0.012250) q[2]; //cycle: 93 //u3(0.000000, 0.000000, -0.012250) q[1]
u3(0.000000, 0.000000, -0.392700) q[1]; //cycle: 93 //u3(0.000000, 0.000000, -0.392700) q[4]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 93 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, -0.098150) q[5]; //cycle: 93 //u3(0.000000, 0.000000, -0.098150) q[3]
cx q[1],q[6]; //cycle: 94 //cx q[4],q[6]
u3(0.000000, 0.000000, -0.785400) q[0]; //cycle: 94 //u3(0.000000, 0.000000, -0.785400) q[5]
u3(0.000000, 0.000000, 0.392700) q[1]; //cycle: 96 //u3(0.000000, 0.000000, 0.392700) q[4]
cx q[1],q[6]; //cycle: 97 //cx q[4],q[6]
cx q[8],q[3]; //cycle: 98 //cx q[2],q[7]
cx q[2],q[7]; //cycle: 98 //cx q[1],q[8]
u3(0.000000, 0.000000, -0.196350) q[1]; //cycle: 99 //u3(0.000000, 0.000000, -0.196350) q[4]
u3(0.000000, 0.000000, 0.049100) q[8]; //cycle: 100 //u3(0.000000, 0.000000, 0.049100) q[2]
u3(0.000000, 0.000000, 0.012250) q[2]; //cycle: 100 //u3(0.000000, 0.000000, 0.012250) q[1]
swp q[0],q[1]; //cycle: 101
cx q[8],q[3]; //cycle: 101 //cx q[2],q[7]
cx q[2],q[7]; //cycle: 101 //cx q[1],q[8]
swp q[5],q[6]; //cycle: 102
u3(0.000000, 0.000000, -0.006150) q[2]; //cycle: 103 //u3(0.000000, 0.000000, -0.006150) q[1]
u3(0.000000, 0.000000, -0.024550) q[8]; //cycle: 103 //u3(0.000000, 0.000000, -0.024550) q[2]
swp q[2],q[3]; //cycle: 104
cx q[8],q[7]; //cycle: 104 //cx q[2],q[8]
u3(0.000000, 0.000000, 0.024550) q[8]; //cycle: 106 //u3(0.000000, 0.000000, 0.024550) q[2]
swp q[0],q[1]; //cycle: 107
cx q[8],q[7]; //cycle: 107 //cx q[2],q[8]
u3(0.000000, 0.000000, -0.012250) q[8]; //cycle: 109 //u3(0.000000, 0.000000, -0.012250) q[2]
cx q[3],q[9]; //cycle: 110 //cx q[1],q[9]
cx q[6],q[2]; //cycle: 110 //cx q[3],q[7]
u3(0.000000, 0.000000, 0.098150) q[6]; //cycle: 112 //u3(0.000000, 0.000000, 0.098150) q[3]
u3(0.000000, 0.000000, 0.006150) q[3]; //cycle: 112 //u3(0.000000, 0.000000, 0.006150) q[1]
cx q[6],q[2]; //cycle: 113 //cx q[3],q[7]
cx q[0],q[5]; //cycle: 113 //cx q[5],q[6]
cx q[3],q[9]; //cycle: 113 //cx q[1],q[9]
u3(0.000000, 0.000000, -0.049100) q[6]; //cycle: 115 //u3(0.000000, 0.000000, -0.049100) q[3]
cx q[1],q[2]; //cycle: 115 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785400) q[0]; //cycle: 115 //u3(0.000000, 0.000000, 0.785400) q[5]
cx q[8],q[9]; //cycle: 115 //cx q[2],q[9]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 115 //u3(1.570796, 0.000000, 3.141593) q[1]
cx q[6],q[7]; //cycle: 116 //cx q[3],q[8]
cx q[0],q[5]; //cycle: 116 //cx q[5],q[6]
u3(0.000000, 0.000000, 0.196350) q[1]; //cycle: 117 //u3(0.000000, 0.000000, 0.196350) q[4]
u3(0.000000, 0.000000, 0.012250) q[8]; //cycle: 117 //u3(0.000000, 0.000000, 0.012250) q[2]
u3(0.000000, 0.000000, 0.049100) q[6]; //cycle: 118 //u3(0.000000, 0.000000, 0.049100) q[3]
cx q[1],q[2]; //cycle: 118 //cx q[4],q[7]
u3(0.000000, 0.000000, -0.392700) q[0]; //cycle: 118 //u3(0.000000, 0.000000, -0.392700) q[5]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 118 //u3(1.570796, 0.000000, 3.141593) q[6]
cx q[8],q[9]; //cycle: 118 //cx q[2],q[9]
cx q[6],q[7]; //cycle: 119 //cx q[3],q[8]
u3(0.000000, 0.000000, -0.785400) q[5]; //cycle: 119 //u3(0.000000, 0.000000, -0.785400) q[6]
u3(0.000000, 0.000000, -0.098150) q[1]; //cycle: 120 //u3(0.000000, 0.000000, -0.098150) q[4]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 120 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, -0.024550) q[6]; //cycle: 121 //u3(0.000000, 0.000000, -0.024550) q[3]
cx q[1],q[7]; //cycle: 121 //cx q[4],q[8]
swp q[2],q[6]; //cycle: 122
swp q[3],q[9]; //cycle: 122
swp q[0],q[5]; //cycle: 123
u3(0.000000, 0.000000, 0.098150) q[1]; //cycle: 123 //u3(0.000000, 0.000000, 0.098150) q[4]
cx q[1],q[7]; //cycle: 124 //cx q[4],q[8]
u3(0.000000, 0.000000, -0.049100) q[1]; //cycle: 126 //u3(0.000000, 0.000000, -0.049100) q[4]
cx q[2],q[3]; //cycle: 128 //cx q[3],q[9]
cx q[5],q[6]; //cycle: 129 //cx q[5],q[7]
u3(0.000000, 0.000000, 0.024550) q[2]; //cycle: 130 //u3(0.000000, 0.000000, 0.024550) q[3]
u3(0.000000, 0.000000, 0.392700) q[5]; //cycle: 131 //u3(0.000000, 0.000000, 0.392700) q[5]
cx q[2],q[3]; //cycle: 131 //cx q[3],q[9]
cx q[5],q[6]; //cycle: 132 //cx q[5],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 133 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, -0.196350) q[5]; //cycle: 134 //u3(0.000000, 0.000000, -0.196350) q[5]
swp q[2],q[3]; //cycle: 135
swp q[5],q[6]; //cycle: 135
cx q[0],q[5]; //cycle: 141 //cx q[6],q[7]
cx q[6],q[7]; //cycle: 141 //cx q[5],q[8]
cx q[1],q[2]; //cycle: 141 //cx q[4],q[9]
u3(0.000000, 0.000000, 0.785400) q[0]; //cycle: 143 //u3(0.000000, 0.000000, 0.785400) q[6]
u3(0.000000, 0.000000, 0.196350) q[6]; //cycle: 143 //u3(0.000000, 0.000000, 0.196350) q[5]
u3(0.000000, 0.000000, 0.049100) q[1]; //cycle: 143 //u3(0.000000, 0.000000, 0.049100) q[4]
cx q[0],q[5]; //cycle: 144 //cx q[6],q[7]
cx q[6],q[7]; //cycle: 144 //cx q[5],q[8]
cx q[1],q[2]; //cycle: 144 //cx q[4],q[9]
u3(0.000000, 0.000000, -0.392700) q[0]; //cycle: 146 //u3(0.000000, 0.000000, -0.392700) q[6]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 146 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, -0.098150) q[6]; //cycle: 146 //u3(0.000000, 0.000000, -0.098150) q[5]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 146 //u3(1.570796, 0.000000, 3.141593) q[4]
swp q[0],q[1]; //cycle: 147
u3(0.000000, 0.000000, -0.785400) q[5]; //cycle: 147 //u3(0.000000, 0.000000, -0.785400) q[7]
cx q[6],q[2]; //cycle: 147 //cx q[5],q[9]
u3(0.000000, 0.000000, 0.098150) q[6]; //cycle: 149 //u3(0.000000, 0.000000, 0.098150) q[5]
cx q[6],q[2]; //cycle: 150 //cx q[5],q[9]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 152 //u3(1.570796, 0.000000, 3.141593) q[5]
cx q[1],q[7]; //cycle: 153 //cx q[6],q[8]
u3(0.000000, 0.000000, 0.392700) q[1]; //cycle: 155 //u3(0.000000, 0.000000, 0.392700) q[6]
cx q[1],q[7]; //cycle: 156 //cx q[6],q[8]
swp q[5],q[6]; //cycle: 157
u3(0.000000, 0.000000, -0.196350) q[1]; //cycle: 158 //u3(0.000000, 0.000000, -0.196350) q[6]
cx q[1],q[2]; //cycle: 159 //cx q[6],q[9]
u3(0.000000, 0.000000, 0.196350) q[1]; //cycle: 161 //u3(0.000000, 0.000000, 0.196350) q[6]
cx q[1],q[2]; //cycle: 162 //cx q[6],q[9]
cx q[6],q[7]; //cycle: 163 //cx q[7],q[8]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 164 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785400) q[6]; //cycle: 165 //u3(0.000000, 0.000000, 0.785400) q[7]
cx q[6],q[7]; //cycle: 166 //cx q[7],q[8]
u3(0.000000, 0.000000, -0.392700) q[6]; //cycle: 168 //u3(0.000000, 0.000000, -0.392700) q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 168 //u3(1.570796, 0.000000, 3.141593) q[8]
cx q[6],q[2]; //cycle: 169 //cx q[7],q[9]
u3(0.000000, 0.000000, -0.785400) q[7]; //cycle: 169 //u3(0.000000, 0.000000, -0.785400) q[8]
u3(0.000000, 0.000000, 0.392700) q[6]; //cycle: 171 //u3(0.000000, 0.000000, 0.392700) q[7]
cx q[6],q[2]; //cycle: 172 //cx q[7],q[9]
cx q[7],q[2]; //cycle: 174 //cx q[8],q[9]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 174 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785400) q[7]; //cycle: 176 //u3(0.000000, 0.000000, 0.785400) q[8]
cx q[7],q[2]; //cycle: 177 //cx q[8],q[9]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 179 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 179 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 180 //u3(1.570796, 0.000000, 3.141593) q[9]
//200 original gates
//222 gates in generated circuit
//97 original depth (cycles)
//181 depth of generated circuit
//92644 nodes popped from queue for processing.
//1018 nodes remain in queue.
