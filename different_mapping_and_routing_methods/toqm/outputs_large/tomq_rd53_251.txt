//Note: initial mapping (logical qubit at each location): 1, 6, 3, 5, 2, -1, 7, 0, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 7, 0, 4, 2, 12, 3, 1, 6, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[0]
cx q[1],q[0]; //cycle: 0 //cx q[6],q[1]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[4]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[3],q[2]; //cycle: 1 //cx q[5],q[3]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 2 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 2 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[1],q[6]; //cycle: 3 //cx q[6],q[7]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 3 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[4],q[3]; //cycle: 3 //cx q[2],q[5]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 5 //u3(0.000000, 0.000000, -0.785398) q[5]
swp q[2],q[3]; //cycle: 6
cx q[3],q[4]; //cycle: 12 //cx q[3],q[2]
cx q[3],q[2]; //cycle: 14 //cx q[3],q[5]
u3(0.000000, 0.000000, 0.785398) q[4]; //cycle: 14 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[5]
swp q[2],q[3]; //cycle: 17
cx q[4],q[3]; //cycle: 23 //cx q[2],q[5]
swp q[2],q[3]; //cycle: 25
cx q[3],q[4]; //cycle: 31 //cx q[3],q[2]
cx q[2],q[3]; //cycle: 33 //cx q[5],q[3]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 33 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 34 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 35 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[4]; //cycle: 35 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 35 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 36 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[2],q[1]; //cycle: 37 //cx q[5],q[6]
cx q[6],q[2]; //cycle: 39 //cx q[7],q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 39 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[1]; //cycle: 41 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 41 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 43 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 43 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[1]; //cycle: 44 //cx q[5],q[6]
cx q[6],q[2]; //cycle: 46 //cx q[7],q[5]
cx q[1],q[6]; //cycle: 48 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 48 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 49 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 50 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 50 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[2],q[3]; //cycle: 50 //cx q[5],q[3]
cx q[1],q[6]; //cycle: 51 //cx q[6],q[7]
swp q[3],q[4]; //cycle: 52
cx q[3],q[2]; //cycle: 58 //cx q[2],q[5]
cx q[4],q[3]; //cycle: 60 //cx q[3],q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 60 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 62 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[3],q[4]; //cycle: 63
cx q[3],q[2]; //cycle: 69 //cx q[3],q[5]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 71 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 71 //u3(0.000000, 0.000000, -0.785398) q[5]
swp q[2],q[3]; //cycle: 72
cx q[4],q[3]; //cycle: 78 //cx q[2],q[5]
swp q[2],q[3]; //cycle: 80
cx q[3],q[4]; //cycle: 86 //cx q[3],q[2]
cx q[2],q[3]; //cycle: 88 //cx q[5],q[3]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 88 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 89 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[4]; //cycle: 90 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 90 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 90 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 91 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[2],q[1]; //cycle: 92 //cx q[5],q[6]
cx q[6],q[2]; //cycle: 94 //cx q[7],q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 94 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[1]; //cycle: 96 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 96 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 98 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 98 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[1]; //cycle: 99 //cx q[5],q[6]
cx q[6],q[2]; //cycle: 101 //cx q[7],q[5]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 103 //u3(1.570796, 0.000000, 3.141593) q[5]
cx q[1],q[6]; //cycle: 103 //cx q[6],q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 104 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 105 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[2],q[3]; //cycle: 105 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 105 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[1],q[6]; //cycle: 106 //cx q[6],q[7]
cx q[7],q[2]; //cycle: 107 //cx q[0],q[5]
swp q[7],q[8]; //cycle: 109
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 109 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[3],q[8]; //cycle: 115 //cx q[3],q[0]
cx q[3],q[2]; //cycle: 117 //cx q[3],q[5]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 117 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 119 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 119 //u3(0.000000, 0.000000, -0.785398) q[5]
swp q[3],q[8]; //cycle: 120
cx q[3],q[2]; //cycle: 126 //cx q[0],q[5]
cx q[8],q[3]; //cycle: 128 //cx q[3],q[0]
swp q[7],q[8]; //cycle: 130
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 130 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 131 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 132 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[2],q[7]; //cycle: 136 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 138 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 138 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 139 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[2],q[1]; //cycle: 140 //cx q[5],q[6]
cx q[6],q[2]; //cycle: 142 //cx q[7],q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 142 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[1]; //cycle: 144 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 144 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 146 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 146 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[2],q[1]; //cycle: 147 //cx q[5],q[6]
cx q[6],q[2]; //cycle: 149 //cx q[7],q[5]
cx q[1],q[6]; //cycle: 151 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 151 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 152 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[2],q[7]; //cycle: 153 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 153 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 153 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[1],q[6]; //cycle: 154 //cx q[6],q[7]
cx q[3],q[2]; //cycle: 155 //cx q[0],q[5]
swp q[3],q[8]; //cycle: 157
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 157 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[8]; //cycle: 163 //cx q[3],q[0]
cx q[7],q[2]; //cycle: 165 //cx q[3],q[5]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 165 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 167 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 167 //u3(0.000000, 0.000000, -0.785398) q[5]
swp q[2],q[3]; //cycle: 168
cx q[8],q[3]; //cycle: 174 //cx q[0],q[5]
cx q[7],q[8]; //cycle: 176 //cx q[3],q[0]
swp q[2],q[3]; //cycle: 177
swp q[6],q[7]; //cycle: 178
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 178 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 179 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 180 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[2],q[6]; //cycle: 184 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 186 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 186 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 187 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[2],q[1]; //cycle: 188 //cx q[5],q[6]
cx q[7],q[2]; //cycle: 190 //cx q[7],q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 190 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[1]; //cycle: 192 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 192 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 194 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 194 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[1]; //cycle: 195 //cx q[5],q[6]
cx q[7],q[2]; //cycle: 197 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 199 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 199 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 200 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 201 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 201 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[12]; //cycle: 202 //cx q[7],q[4]
cx q[2],q[1]; //cycle: 202 //cx q[5],q[6]
swp q[4],q[8]; //cycle: 203
cx q[8],q[7]; //cycle: 209 //cx q[2],q[7]
cx q[12],q[8]; //cycle: 211 //cx q[4],q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 211 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[12],q[7]; //cycle: 213 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 213 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 215 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 215 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[8],q[7]; //cycle: 216 //cx q[2],q[7]
cx q[12],q[8]; //cycle: 218 //cx q[4],q[2]
cx q[7],q[12]; //cycle: 220 //cx q[7],q[4]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 220 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 221 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 222 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 222 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 222 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 223 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[7],q[2]; //cycle: 224 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 226 //cx q[6],q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 226 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 228 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[1],q[2]; //cycle: 228 //cx q[6],q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 230 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 230 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 231 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 233 //cx q[6],q[7]
cx q[2],q[1]; //cycle: 235 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 235 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 236 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 237 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 237 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[7],q[12]; //cycle: 237 //cx q[7],q[4]
cx q[2],q[1]; //cycle: 238 //cx q[5],q[6]
cx q[8],q[7]; //cycle: 239 //cx q[2],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 241 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[12],q[8]; //cycle: 241 //cx q[4],q[2]
cx q[12],q[7]; //cycle: 243 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 243 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 245 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 245 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[8],q[7]; //cycle: 246 //cx q[2],q[7]
cx q[12],q[8]; //cycle: 248 //cx q[4],q[2]
cx q[7],q[12]; //cycle: 250 //cx q[7],q[4]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 250 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 251 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 252 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 252 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 252 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 253 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[7],q[2]; //cycle: 254 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 256 //cx q[6],q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 256 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[1],q[2]; //cycle: 258 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 258 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 260 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 260 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 261 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 263 //cx q[6],q[7]
cx q[2],q[1]; //cycle: 265 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 265 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 266 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 267 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 267 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[7],q[12]; //cycle: 267 //cx q[7],q[4]
swp q[4],q[8]; //cycle: 268
cx q[2],q[1]; //cycle: 268 //cx q[5],q[6]
cx q[8],q[7]; //cycle: 274 //cx q[0],q[7]
cx q[12],q[8]; //cycle: 276 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 276 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[12],q[7]; //cycle: 278 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 278 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 280 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 280 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[8],q[7]; //cycle: 281 //cx q[0],q[7]
cx q[12],q[8]; //cycle: 283 //cx q[4],q[0]
cx q[7],q[12]; //cycle: 285 //cx q[7],q[4]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 285 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 286 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 287 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 287 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 287 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 288 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[7],q[2]; //cycle: 289 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 291 //cx q[6],q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 291 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[1],q[2]; //cycle: 293 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 293 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 295 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 295 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 296 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 298 //cx q[6],q[7]
cx q[2],q[1]; //cycle: 300 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 300 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 301 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 302 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 302 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[7],q[12]; //cycle: 302 //cx q[7],q[4]
cx q[2],q[1]; //cycle: 303 //cx q[5],q[6]
cx q[8],q[7]; //cycle: 304 //cx q[0],q[7]
cx q[12],q[8]; //cycle: 306 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 306 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[12],q[7]; //cycle: 308 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 308 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 310 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 310 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[8],q[7]; //cycle: 311 //cx q[0],q[7]
cx q[12],q[8]; //cycle: 313 //cx q[4],q[0]
cx q[7],q[12]; //cycle: 315 //cx q[7],q[4]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 315 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 316 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 317 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 317 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 317 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 318 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[7],q[2]; //cycle: 319 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 321 //cx q[6],q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 321 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[1],q[2]; //cycle: 323 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 323 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 325 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 325 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 326 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 328 //cx q[6],q[7]
cx q[2],q[1]; //cycle: 330 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 330 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 331 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 332 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 332 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[1],q[6]; //cycle: 333 //cx q[6],q[3]
cx q[2],q[7]; //cycle: 333 //cx q[5],q[7]
swp q[3],q[4]; //cycle: 335
swp q[2],q[3]; //cycle: 341
cx q[2],q[1]; //cycle: 347 //cx q[2],q[6]
cx q[6],q[2]; //cycle: 349 //cx q[3],q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 349 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[1]; //cycle: 351 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 351 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 353 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 353 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[1]; //cycle: 354 //cx q[2],q[6]
cx q[6],q[2]; //cycle: 356 //cx q[3],q[2]
cx q[1],q[6]; //cycle: 358 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 358 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 359 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 360 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 360 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 360 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[2],q[3]; //cycle: 361
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 361 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[1],q[2]; //cycle: 367 //cx q[6],q[5]
cx q[7],q[1]; //cycle: 369 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 369 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 371 //cx q[7],q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 371 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 373 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 373 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[1],q[2]; //cycle: 374 //cx q[6],q[5]
cx q[7],q[1]; //cycle: 376 //cx q[7],q[6]
cx q[2],q[7]; //cycle: 378 //cx q[5],q[7]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 378 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 379 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 380 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 380 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[1],q[6]; //cycle: 380 //cx q[6],q[3]
cx q[2],q[7]; //cycle: 381 //cx q[5],q[7]
swp q[2],q[3]; //cycle: 383
cx q[2],q[1]; //cycle: 389 //cx q[2],q[6]
cx q[6],q[2]; //cycle: 391 //cx q[3],q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 391 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[1]; //cycle: 393 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 393 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 395 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 395 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[1]; //cycle: 396 //cx q[2],q[6]
cx q[6],q[2]; //cycle: 398 //cx q[3],q[2]
cx q[1],q[6]; //cycle: 400 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 400 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 401 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 402 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(3.141593, 0.000000, 3.141593) q[6]; //cycle: 402 //u3(3.141593, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 402 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[2],q[3]; //cycle: 403
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 403 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 403 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[1],q[2]; //cycle: 409 //cx q[6],q[5]
cx q[7],q[1]; //cycle: 411 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 411 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 413 //cx q[7],q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 413 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 415 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 415 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[1],q[2]; //cycle: 416 //cx q[6],q[5]
cx q[7],q[1]; //cycle: 418 //cx q[7],q[6]
cx q[2],q[7]; //cycle: 420 //cx q[5],q[7]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 420 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 421 //u3(0.000000, 0.000000, 0.785398) q[6]
swp q[0],q[1]; //cycle: 422
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 422 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(3.141593, 0.000000, 3.141593) q[7]; //cycle: 422 //u3(3.141593, 0.000000, 3.141593) q[7]
cx q[6],q[2]; //cycle: 423 //cx q[3],q[5]
cx q[1],q[6]; //cycle: 428 //cx q[1],q[3]
cx q[2],q[1]; //cycle: 430 //cx q[5],q[1]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 430 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[6]; //cycle: 432 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 432 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 434 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 434 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[1],q[6]; //cycle: 435 //cx q[1],q[3]
cx q[2],q[1]; //cycle: 437 //cx q[5],q[1]
cx q[6],q[2]; //cycle: 439 //cx q[3],q[5]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 439 //u3(1.570796, 0.000000, 3.141593) q[1]
cx q[7],q[1]; //cycle: 440 //cx q[7],q[1]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 441 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 441 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[6],q[2]; //cycle: 442 //cx q[3],q[5]
swp q[7],q[8]; //cycle: 443
cx q[7],q[6]; //cycle: 449 //cx q[0],q[3]
cx q[2],q[7]; //cycle: 451 //cx q[5],q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 451 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[6]; //cycle: 453 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 453 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 455 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 455 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[7],q[6]; //cycle: 456 //cx q[0],q[3]
cx q[2],q[7]; //cycle: 458 //cx q[5],q[0]
cx q[6],q[2]; //cycle: 460 //cx q[3],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 460 //u3(1.570796, 0.000000, 3.141593) q[0]
cx q[8],q[7]; //cycle: 461 //cx q[7],q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 462 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 462 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 463 //u3(1.570796, 0.000000, 3.141593) q[0]
cx q[2],q[6]; //cycle: 463 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 463 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 464 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[0],q[1]; //cycle: 465
cx q[7],q[2]; //cycle: 465 //cx q[0],q[5]
cx q[6],q[7]; //cycle: 467 //cx q[3],q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 467 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[6],q[2]; //cycle: 469 //cx q[3],q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 469 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 471 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 471 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 472 //cx q[0],q[5]
cx q[6],q[7]; //cycle: 474 //cx q[3],q[0]
cx q[2],q[6]; //cycle: 476 //cx q[5],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 476 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 477 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 478 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 478 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 478 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[7],q[8]; //cycle: 479
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 479 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[1],q[7]; //cycle: 485 //cx q[6],q[7]
cx q[2],q[1]; //cycle: 487 //cx q[5],q[6]
cx q[7],q[2]; //cycle: 489 //cx q[7],q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 489 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[1]; //cycle: 491 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 491 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 493 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 493 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[1]; //cycle: 494 //cx q[5],q[6]
cx q[7],q[2]; //cycle: 496 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 498 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 498 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 499 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 500 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 500 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[2],q[6]; //cycle: 500 //cx q[5],q[3]
cx q[1],q[7]; //cycle: 501 //cx q[6],q[7]
swp q[7],q[8]; //cycle: 503
cx q[7],q[2]; //cycle: 509 //cx q[0],q[5]
cx q[6],q[7]; //cycle: 511 //cx q[3],q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 511 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[6],q[2]; //cycle: 513 //cx q[3],q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 513 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 515 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 515 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 516 //cx q[0],q[5]
cx q[6],q[7]; //cycle: 518 //cx q[3],q[0]
cx q[2],q[6]; //cycle: 520 //cx q[5],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 520 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 521 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 522 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 522 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 522 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 523 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[2],q[1]; //cycle: 524 //cx q[5],q[6]
swp q[7],q[8]; //cycle: 525
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 526 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[2]; //cycle: 531 //cx q[7],q[5]
cx q[7],q[1]; //cycle: 533 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 533 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 535 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 535 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[1]; //cycle: 536 //cx q[5],q[6]
cx q[7],q[2]; //cycle: 538 //cx q[7],q[5]
cx q[1],q[7]; //cycle: 540 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 540 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 541 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 542 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 542 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[1],q[7]; //cycle: 543 //cx q[6],q[7]
swp q[7],q[8]; //cycle: 545
cx q[7],q[1]; //cycle: 551 //cx q[0],q[6]
cx q[8],q[7]; //cycle: 553 //cx q[7],q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 553 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 555 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[1],q[7]; //cycle: 556
cx q[8],q[7]; //cycle: 562 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 564 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 564 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[1],q[7]; //cycle: 565 //cx q[0],q[6]
swp q[7],q[8]; //cycle: 567
cx q[7],q[1]; //cycle: 573 //cx q[7],q[0]
cx q[8],q[7]; //cycle: 575 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 575 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 576 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 577 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 577 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 578 //cx q[7],q[0]
swp q[2],q[3]; //cycle: 579
cx q[2],q[7]; //cycle: 585 //cx q[2],q[7]
cx q[1],q[2]; //cycle: 587 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 587 //u3(0.000000, 0.000000, -0.785398) q[7]
swp q[8],q[12]; //cycle: 588
cx q[1],q[7]; //cycle: 589 //cx q[0],q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 589 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[6],q[11]; //cycle: 591
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 591 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 591 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[2],q[7]; //cycle: 592 //cx q[2],q[7]
cx q[8],q[3]; //cycle: 594 //cx q[4],q[5]
cx q[1],q[2]; //cycle: 594 //cx q[0],q[2]
cx q[7],q[1]; //cycle: 596 //cx q[7],q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 596 //u3(1.570796, 0.000000, 3.141593) q[2]
cx q[12],q[11]; //cycle: 597 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 597 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 598 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 598 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 598 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 599 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[7],q[12]; //cycle: 600 //cx q[7],q[6]
swp q[6],q[7]; //cycle: 602
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 602 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[11],q[6]; //cycle: 608 //cx q[3],q[7]
cx q[11],q[12]; //cycle: 610 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 610 //u3(0.000000, 0.000000, 0.785398) q[7]
swp q[6],q[7]; //cycle: 611
u3(0.000000, 0.000000, -0.785398) q[11]; //cycle: 612 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 612 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[12]; //cycle: 617 //cx q[7],q[6]
swp q[6],q[7]; //cycle: 619
cx q[11],q[6]; //cycle: 625 //cx q[3],q[7]
cx q[12],q[11]; //cycle: 627 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 627 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 628 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 629 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 629 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 629 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 630 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[12],q[8]; //cycle: 631 //cx q[6],q[4]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 633 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[3],q[8]; //cycle: 634
cx q[8],q[12]; //cycle: 640 //cx q[5],q[6]
cx q[8],q[3]; //cycle: 642 //cx q[5],q[4]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 642 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 644 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 644 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[8],q[12]; //cycle: 645
cx q[8],q[3]; //cycle: 651 //cx q[6],q[4]
cx q[12],q[8]; //cycle: 653 //cx q[5],q[6]
swp q[11],q[12]; //cycle: 655
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 655 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 656 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[8],q[12]; //cycle: 661 //cx q[6],q[3]
swp q[6],q[7]; //cycle: 662
cx q[7],q[8]; //cycle: 668 //cx q[7],q[6]
swp q[6],q[11]; //cycle: 669
cx q[12],q[7]; //cycle: 670 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 670 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[8]; //cycle: 672 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 672 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 674 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 674 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[8]; //cycle: 675 //cx q[7],q[6]
cx q[12],q[7]; //cycle: 677 //cx q[3],q[7]
cx q[8],q[12]; //cycle: 679 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 679 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 680 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 681 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 681 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 681 //cx q[7],q[0]
cx q[8],q[12]; //cycle: 682 //cx q[6],q[3]
cx q[2],q[7]; //cycle: 683 //cx q[2],q[7]
cx q[1],q[2]; //cycle: 685 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 685 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[1],q[7]; //cycle: 687 //cx q[0],q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 687 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 689 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 689 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[2],q[7]; //cycle: 690 //cx q[2],q[7]
cx q[1],q[2]; //cycle: 692 //cx q[0],q[2]
cx q[7],q[1]; //cycle: 694 //cx q[7],q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 694 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 695 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 696 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 696 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 696 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 697 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 697 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[7],q[8]; //cycle: 698 //cx q[7],q[6]
cx q[12],q[7]; //cycle: 700 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 700 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[2],q[3]; //cycle: 701
cx q[12],q[8]; //cycle: 702 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 702 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 704 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 704 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[8]; //cycle: 705 //cx q[7],q[6]
cx q[2],q[6]; //cycle: 707 //cx q[4],q[5]
cx q[12],q[7]; //cycle: 707 //cx q[3],q[7]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 709 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 709 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[8],q[12]; //cycle: 709 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 709 //u3(1.570796, 0.000000, 3.141593) q[7]
cx q[2],q[6]; //cycle: 710 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 710 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 711 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 711 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 711 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 712 //u3(0.000000, 0.000000, 0.785398) q[6]
swp q[7],q[8]; //cycle: 713
cx q[7],q[2]; //cycle: 719 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 721 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 721 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[2]; //cycle: 723 //cx q[5],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 723 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 725 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 725 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[2]; //cycle: 726 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 728 //cx q[5],q[6]
cx q[2],q[6]; //cycle: 730 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 730 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 731 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 732 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 732 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[12]; //cycle: 732 //cx q[6],q[3]
cx q[2],q[6]; //cycle: 733 //cx q[4],q[5]
cx q[8],q[7]; //cycle: 734 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 736 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 736 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 738 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 738 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 740 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 740 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 741 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 743 //cx q[3],q[7]
cx q[7],q[12]; //cycle: 745 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 745 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 746 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 747 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 747 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[7],q[8]; //cycle: 748 //cx q[6],q[7]
cx q[1],q[7]; //cycle: 750 //cx q[0],q[6]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 752 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[7],q[8]; //cycle: 753
cx q[7],q[1]; //cycle: 759 //cx q[7],q[0]
cx q[7],q[8]; //cycle: 761 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 761 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 763 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 763 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[7],q[8]; //cycle: 764
cx q[1],q[7]; //cycle: 770 //cx q[0],q[6]
swp q[7],q[8]; //cycle: 772
cx q[7],q[1]; //cycle: 778 //cx q[7],q[0]
cx q[8],q[7]; //cycle: 780 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 780 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 781 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 782 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 782 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 783 //cx q[7],q[0]
cx q[8],q[12]; //cycle: 783 //cx q[6],q[3]
swp q[2],q[3]; //cycle: 784
cx q[2],q[7]; //cycle: 790 //cx q[2],q[7]
cx q[1],q[2]; //cycle: 792 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 792 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[1],q[7]; //cycle: 794 //cx q[0],q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 794 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 796 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 796 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[2],q[7]; //cycle: 797 //cx q[2],q[7]
cx q[1],q[2]; //cycle: 799 //cx q[0],q[2]
cx q[7],q[1]; //cycle: 801 //cx q[7],q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 801 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 802 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 803 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 803 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 803 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 804 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[7],q[8]; //cycle: 805 //cx q[7],q[6]
cx q[12],q[7]; //cycle: 807 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 807 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[8]; //cycle: 809 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 809 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 811 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 811 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[8]; //cycle: 812 //cx q[7],q[6]
cx q[12],q[7]; //cycle: 814 //cx q[3],q[7]
cx q[8],q[12]; //cycle: 816 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 816 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 817 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 818 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 818 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 818 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 819 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[8],q[3]; //cycle: 820 //cx q[6],q[4]
swp q[7],q[8]; //cycle: 822
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 822 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[7]; //cycle: 828 //cx q[5],q[6]
swp q[2],q[3]; //cycle: 829
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 830 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[6],q[2]; //cycle: 835 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 837 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 837 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[2]; //cycle: 838 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 840 //cx q[5],q[6]
cx q[2],q[6]; //cycle: 842 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 842 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 843 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 844 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 844 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[12]; //cycle: 844 //cx q[6],q[3]
cx q[2],q[6]; //cycle: 845 //cx q[4],q[5]
cx q[8],q[7]; //cycle: 846 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 848 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 848 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 850 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 850 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 852 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 852 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 853 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 855 //cx q[3],q[7]
cx q[7],q[12]; //cycle: 857 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 857 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 858 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 859 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 859 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[12]; //cycle: 860 //cx q[6],q[3]
swp q[7],q[8]; //cycle: 862
cx q[7],q[1]; //cycle: 868 //cx q[7],q[0]
swp q[2],q[3]; //cycle: 869
cx q[2],q[7]; //cycle: 875 //cx q[2],q[7]
cx q[1],q[2]; //cycle: 877 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 877 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[1],q[7]; //cycle: 879 //cx q[0],q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 879 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 881 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 881 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[2],q[7]; //cycle: 882 //cx q[2],q[7]
cx q[1],q[2]; //cycle: 884 //cx q[0],q[2]
cx q[7],q[1]; //cycle: 886 //cx q[7],q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 886 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 887 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 888 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 888 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 888 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 889 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 889 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[7],q[8]; //cycle: 890 //cx q[7],q[6]
cx q[12],q[7]; //cycle: 892 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 892 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[8]; //cycle: 894 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 894 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 896 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 896 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[8]; //cycle: 897 //cx q[7],q[6]
cx q[12],q[7]; //cycle: 899 //cx q[3],q[7]
cx q[8],q[12]; //cycle: 901 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 901 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 902 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 903 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 903 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 903 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 904 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[8],q[3]; //cycle: 905 //cx q[6],q[4]
swp q[7],q[8]; //cycle: 907
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 907 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[7]; //cycle: 913 //cx q[5],q[6]
swp q[2],q[3]; //cycle: 914
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 915 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[6],q[2]; //cycle: 920 //cx q[5],q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 922 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 922 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[2]; //cycle: 923 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 925 //cx q[5],q[6]
cx q[2],q[6]; //cycle: 927 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 927 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 928 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 929 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(3.141593, 0.000000, 3.141593) q[6]; //cycle: 929 //u3(3.141593, 0.000000, 3.141593) q[5]
cx q[7],q[12]; //cycle: 929 //cx q[6],q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 930 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[8],q[7]; //cycle: 931 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 933 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 933 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 935 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 935 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 937 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 937 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 938 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 940 //cx q[3],q[7]
cx q[7],q[12]; //cycle: 942 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 942 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 943 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 944 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 944 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[12]; //cycle: 945 //cx q[6],q[3]
cx q[1],q[7]; //cycle: 947 //cx q[0],q[6]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 949 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[7],q[12]; //cycle: 950
cx q[7],q[1]; //cycle: 956 //cx q[3],q[0]
cx q[7],q[12]; //cycle: 958 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 958 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 960 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 960 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[1],q[7]; //cycle: 961
swp q[2],q[3]; //cycle: 967
cx q[7],q[12]; //cycle: 967 //cx q[0],q[6]
cx q[1],q[7]; //cycle: 969 //cx q[3],q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 971 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 972 //u3(1.570796, 0.000000, 3.141593) q[0]
cx q[3],q[8]; //cycle: 973 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 973 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[7],q[12]; //cycle: 974
cx q[7],q[1]; //cycle: 980 //cx q[6],q[3]
swp q[2],q[3]; //cycle: 981
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 982 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 982 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 983 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[2]; //cycle: 987 //cx q[6],q[4]
cx q[8],q[7]; //cycle: 989 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 989 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[3],q[8]; //cycle: 991
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 991 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[3],q[2]; //cycle: 997 //cx q[7],q[4]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 999 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 999 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[2]; //cycle: 1000 //cx q[6],q[4]
swp q[3],q[8]; //cycle: 1001
cx q[8],q[7]; //cycle: 1007 //cx q[7],q[6]
swp q[3],q[8]; //cycle: 1009
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1009 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1010 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 1011 //cx q[6],q[3]
cx q[12],q[7]; //cycle: 1013 //cx q[0],q[6]
cx q[2],q[3]; //cycle: 1015 //cx q[4],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1015 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[1],q[7]; //cycle: 1016
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1017 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1017 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[2],q[3]; //cycle: 1018 //cx q[4],q[7]
cx q[7],q[12]; //cycle: 1022 //cx q[3],q[0]
cx q[7],q[1]; //cycle: 1024 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1024 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1026 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1026 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[1],q[7]; //cycle: 1027
cx q[12],q[7]; //cycle: 1033 //cx q[0],q[6]
swp q[1],q[7]; //cycle: 1035
cx q[7],q[12]; //cycle: 1041 //cx q[3],q[0]
cx q[1],q[7]; //cycle: 1043 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1043 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1044 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 1045 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(3.141593, 0.000000, 3.141593) q[7]; //cycle: 1045 //u3(3.141593, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1045 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1046 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1046 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[1],q[2]; //cycle: 1047 //cx q[6],q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1049 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[2],q[3]; //cycle: 1050
cx q[2],q[1]; //cycle: 1056 //cx q[7],q[6]
cx q[2],q[3]; //cycle: 1058 //cx q[7],q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1058 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1060 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 1060 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[1],q[2]; //cycle: 1061
cx q[2],q[3]; //cycle: 1067 //cx q[6],q[4]
cx q[1],q[2]; //cycle: 1069 //cx q[7],q[6]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1071 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1072 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[2],q[7]; //cycle: 1073 //cx q[6],q[3]
swp q[3],q[8]; //cycle: 1074
swp q[1],q[7]; //cycle: 1075
cx q[3],q[2]; //cycle: 1080 //cx q[2],q[6]
cx q[8],q[7]; //cycle: 1081 //cx q[4],q[7]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1082 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[1],q[2]; //cycle: 1083
u3(3.141593, 0.000000, 3.141593) q[7]; //cycle: 1083 //u3(3.141593, 0.000000, 3.141593) q[7]
u3(3.141593, 0.000000, 3.141593) q[8]; //cycle: 1083 //u3(3.141593, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1084 //u3(0.000000, 0.000000, 0.785398) q[7]
swp q[7],q[8]; //cycle: 1087
cx q[2],q[3]; //cycle: 1089 //cx q[3],q[2]
cx q[2],q[1]; //cycle: 1091 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1091 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1093 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1093 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[1],q[7]; //cycle: 1094
swp q[2],q[3]; //cycle: 1094
cx q[1],q[0]; //cycle: 1100 //cx q[4],q[1]
cx q[2],q[7]; //cycle: 1100 //cx q[2],q[6]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1102 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 1102 //u3(1.570796, 0.000000, 3.141593) q[1]
cx q[3],q[2]; //cycle: 1102 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 1103 //u3(0.000000, 0.000000, 0.785398) q[1]
swp q[3],q[8]; //cycle: 1104
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1104 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1105 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1106 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[2],q[3]; //cycle: 1110
cx q[7],q[8]; //cycle: 1110 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1112 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1112 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1113 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[1],q[2]; //cycle: 1116 //cx q[4],q[7]
cx q[7],q[1]; //cycle: 1118 //cx q[6],q[4]
cx q[2],q[7]; //cycle: 1120 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1120 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[1]; //cycle: 1122 //cx q[7],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1122 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1124 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1124 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1125 //cx q[6],q[4]
cx q[2],q[7]; //cycle: 1127 //cx q[7],q[6]
cx q[1],q[2]; //cycle: 1129 //cx q[4],q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1129 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1130 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1131 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1131 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[8]; //cycle: 1131 //cx q[6],q[3]
cx q[1],q[2]; //cycle: 1132 //cx q[4],q[7]
swp q[7],q[8]; //cycle: 1133
cx q[3],q[8]; //cycle: 1139 //cx q[2],q[6]
swp q[2],q[3]; //cycle: 1141
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1141 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[2]; //cycle: 1147 //cx q[3],q[2]
cx q[7],q[8]; //cycle: 1149 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1149 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[2],q[3]; //cycle: 1150
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1151 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1151 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[3],q[8]; //cycle: 1156 //cx q[2],q[6]
swp q[7],q[8]; //cycle: 1158
cx q[8],q[3]; //cycle: 1164 //cx q[3],q[2]
cx q[7],q[8]; //cycle: 1166 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 1166 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 1167 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1168 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1168 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1168 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1169 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 1170 //cx q[6],q[4]
cx q[2],q[7]; //cycle: 1172 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1172 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[1]; //cycle: 1174 //cx q[7],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1174 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1176 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1176 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1177 //cx q[6],q[4]
cx q[2],q[7]; //cycle: 1179 //cx q[7],q[6]
cx q[1],q[2]; //cycle: 1181 //cx q[4],q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1181 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1182 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1183 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1183 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[8]; //cycle: 1183 //cx q[6],q[3]
cx q[1],q[2]; //cycle: 1184 //cx q[4],q[7]
cx q[12],q[7]; //cycle: 1185 //cx q[0],q[6]
cx q[8],q[12]; //cycle: 1187 //cx q[3],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1187 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1189 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1189 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1191 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1191 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1192 //cx q[0],q[6]
cx q[8],q[12]; //cycle: 1194 //cx q[3],q[0]
cx q[7],q[8]; //cycle: 1196 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1196 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1197 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1198 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1198 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1198 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1199 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 1200 //cx q[6],q[4]
cx q[2],q[7]; //cycle: 1202 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1202 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[1]; //cycle: 1204 //cx q[7],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1204 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1206 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1206 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1207 //cx q[6],q[4]
cx q[2],q[7]; //cycle: 1209 //cx q[7],q[6]
cx q[1],q[2]; //cycle: 1211 //cx q[4],q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1211 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1212 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1213 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1213 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[8]; //cycle: 1213 //cx q[6],q[3]
cx q[1],q[2]; //cycle: 1214 //cx q[4],q[7]
cx q[12],q[7]; //cycle: 1215 //cx q[0],q[6]
cx q[8],q[12]; //cycle: 1217 //cx q[3],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1217 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1219 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1219 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1221 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1221 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1222 //cx q[0],q[6]
cx q[8],q[12]; //cycle: 1224 //cx q[3],q[0]
swp q[6],q[11]; //cycle: 1226
cx q[7],q[8]; //cycle: 1226 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1226 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1227 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1228 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1228 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1228 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1229 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 1230 //cx q[6],q[4]
swp q[8],q[12]; //cycle: 1232
cx q[2],q[7]; //cycle: 1232 //cx q[7],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1232 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[1]; //cycle: 1234 //cx q[7],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1234 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1236 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1236 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1237 //cx q[6],q[4]
cx q[12],q[11]; //cycle: 1238 //cx q[3],q[5]
cx q[2],q[7]; //cycle: 1239 //cx q[7],q[6]
swp q[6],q[11]; //cycle: 1240
cx q[1],q[2]; //cycle: 1241 //cx q[4],q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1241 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(3.141593, 0.000000, 3.141593) q[7]; //cycle: 1242 //u3(3.141593, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1243 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1243 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1243 //u3(0.000000, 0.000000, 0.785398) q[6]
swp q[0],q[5]; //cycle: 1245
swp q[11],q[12]; //cycle: 1246
cx q[5],q[11]; //cycle: 1252 //cx q[1],q[3]
cx q[6],q[5]; //cycle: 1254 //cx q[5],q[1]
u3(0.000000, 0.000000, -0.785398) q[11]; //cycle: 1254 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[6],q[11]; //cycle: 1256 //cx q[5],q[3]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 1256 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1258 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[11]; //cycle: 1258 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[5],q[11]; //cycle: 1259 //cx q[1],q[3]
cx q[6],q[5]; //cycle: 1261 //cx q[5],q[1]
cx q[11],q[6]; //cycle: 1263 //cx q[3],q[5]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 1263 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1265 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 1265 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[6],q[2]; //cycle: 1266 //cx q[5],q[7]
swp q[7],q[8]; //cycle: 1267
cx q[7],q[6]; //cycle: 1273 //cx q[0],q[5]
cx q[2],q[7]; //cycle: 1275 //cx q[7],q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1275 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[2],q[6]; //cycle: 1277 //cx q[7],q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1277 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1279 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1279 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[6]; //cycle: 1280 //cx q[0],q[5]
cx q[2],q[7]; //cycle: 1282 //cx q[7],q[0]
cx q[6],q[2]; //cycle: 1284 //cx q[5],q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1284 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1285 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1286 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1286 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1286 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[2],q[1]; //cycle: 1287 //cx q[7],q[4]
cx q[7],q[2]; //cycle: 1289 //cx q[0],q[7]
cx q[1],q[7]; //cycle: 1291 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1291 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[1],q[2]; //cycle: 1293 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1293 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1295 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1295 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[7],q[2]; //cycle: 1296 //cx q[0],q[7]
cx q[1],q[7]; //cycle: 1298 //cx q[4],q[0]
cx q[2],q[1]; //cycle: 1300 //cx q[7],q[4]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1300 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1301 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1302 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1302 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1302 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[7],q[8]; //cycle: 1303
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1303 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[6],q[7]; //cycle: 1309 //cx q[5],q[6]
cx q[2],q[6]; //cycle: 1311 //cx q[7],q[5]
cx q[7],q[2]; //cycle: 1313 //cx q[6],q[7]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1313 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[6]; //cycle: 1315 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1315 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1317 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1317 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[2],q[6]; //cycle: 1318 //cx q[7],q[5]
cx q[7],q[2]; //cycle: 1320 //cx q[6],q[7]
cx q[6],q[7]; //cycle: 1322 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1322 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1323 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1324 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1324 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[2],q[1]; //cycle: 1324 //cx q[7],q[4]
cx q[6],q[7]; //cycle: 1325 //cx q[5],q[6]
swp q[7],q[8]; //cycle: 1327
cx q[7],q[2]; //cycle: 1333 //cx q[0],q[7]
cx q[1],q[7]; //cycle: 1335 //cx q[4],q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1335 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[1],q[2]; //cycle: 1337 //cx q[4],q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1337 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1339 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1339 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[7],q[2]; //cycle: 1340 //cx q[0],q[7]
cx q[1],q[7]; //cycle: 1342 //cx q[4],q[0]
cx q[2],q[1]; //cycle: 1344 //cx q[7],q[4]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1344 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1345 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1346 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1346 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1346 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1347 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[2],q[6]; //cycle: 1348 //cx q[7],q[5]
swp q[7],q[8]; //cycle: 1349
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1350 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[7],q[2]; //cycle: 1355 //cx q[6],q[7]
cx q[7],q[6]; //cycle: 1357 //cx q[6],q[5]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1357 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1359 //u3(0.000000, 0.000000, -0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1359 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[2],q[6]; //cycle: 1360 //cx q[7],q[5]
cx q[7],q[2]; //cycle: 1362 //cx q[6],q[7]
cx q[6],q[7]; //cycle: 1364 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1364 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1365 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1366 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1366 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[7],q[2]; //cycle: 1367 //cx q[6],q[7]
cx q[1],q[6]; //cycle: 1367 //cx q[4],q[5]
cx q[8],q[7]; //cycle: 1369 //cx q[0],q[6]
swp q[3],q[8]; //cycle: 1371
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1371 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[2],q[3]; //cycle: 1377 //cx q[7],q[0]
cx q[2],q[7]; //cycle: 1379 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1379 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[3],q[8]; //cycle: 1380
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1381 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1381 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1386 //cx q[0],q[6]
swp q[3],q[8]; //cycle: 1388
cx q[2],q[3]; //cycle: 1394 //cx q[7],q[0]
cx q[7],q[2]; //cycle: 1396 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 1396 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1397 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1398 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1398 //u3(0.000000, 0.000000, 0.785398) q[6]
swp q[6],q[7]; //cycle: 1399
swp q[11],q[12]; //cycle: 1399
cx q[2],q[3]; //cycle: 1399 //cx q[7],q[0]
swp q[3],q[8]; //cycle: 1401
swp q[6],q[11]; //cycle: 1405
swp q[7],q[12]; //cycle: 1405
cx q[3],q[2]; //cycle: 1407 //cx q[2],q[7]
cx q[8],q[3]; //cycle: 1409 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1409 //u3(0.000000, 0.000000, -0.785398) q[7]
swp q[7],q[8]; //cycle: 1411
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1411 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[11],q[12]; //cycle: 1415
cx q[7],q[2]; //cycle: 1417 //cx q[0],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1419 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1419 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[3],q[2]; //cycle: 1420 //cx q[2],q[7]
cx q[12],q[8]; //cycle: 1421 //cx q[6],q[3]
swp q[2],q[7]; //cycle: 1422
cx q[2],q[3]; //cycle: 1428 //cx q[0],q[2]
cx q[7],q[2]; //cycle: 1430 //cx q[7],q[0]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 1430 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 1431 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1432 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1432 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1432 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1433 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[7],q[12]; //cycle: 1434 //cx q[7],q[6]
cx q[8],q[7]; //cycle: 1436 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1436 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[12]; //cycle: 1438 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1438 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1440 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1440 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[12]; //cycle: 1441 //cx q[7],q[6]
cx q[8],q[7]; //cycle: 1443 //cx q[3],q[7]
cx q[12],q[8]; //cycle: 1445 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1445 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1446 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1447 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1447 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1447 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1448 //u3(0.000000, 0.000000, 0.785398) q[6]
swp q[7],q[12]; //cycle: 1449
cx q[7],q[1]; //cycle: 1455 //cx q[6],q[4]
swp q[6],q[11]; //cycle: 1456
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1457 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[7]; //cycle: 1462 //cx q[5],q[6]
cx q[6],q[1]; //cycle: 1464 //cx q[5],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1464 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1466 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1466 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1467 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 1469 //cx q[5],q[6]
cx q[1],q[6]; //cycle: 1471 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1471 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1472 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1473 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1473 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[8]; //cycle: 1473 //cx q[6],q[3]
cx q[1],q[6]; //cycle: 1474 //cx q[4],q[5]
cx q[12],q[7]; //cycle: 1475 //cx q[7],q[6]
cx q[8],q[12]; //cycle: 1477 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1477 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1479 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1479 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1481 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1481 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1482 //cx q[7],q[6]
cx q[8],q[12]; //cycle: 1484 //cx q[3],q[7]
swp q[2],q[7]; //cycle: 1485
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1486 //u3(1.570796, 0.000000, 3.141593) q[7]
swp q[3],q[8]; //cycle: 1487
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1487 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[12],q[7]; //cycle: 1491 //cx q[7],q[0]
cx q[2],q[3]; //cycle: 1493 //cx q[6],q[3]
cx q[8],q[12]; //cycle: 1493 //cx q[2],q[7]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1495 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1495 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[8]; //cycle: 1495 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1495 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[2],q[3]; //cycle: 1496 //cx q[6],q[3]
cx q[7],q[12]; //cycle: 1497 //cx q[0],q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1497 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1499 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1499 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[8],q[12]; //cycle: 1500 //cx q[2],q[7]
cx q[7],q[8]; //cycle: 1502 //cx q[0],q[2]
cx q[12],q[7]; //cycle: 1504 //cx q[7],q[0]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1504 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1505 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1506 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1506 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1506 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1507 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1507 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[2],q[7]; //cycle: 1508
cx q[12],q[7]; //cycle: 1514 //cx q[7],q[6]
swp q[3],q[8]; //cycle: 1515
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1516 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[12]; //cycle: 1521 //cx q[3],q[7]
cx q[8],q[7]; //cycle: 1523 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1523 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1525 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1525 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1526 //cx q[7],q[6]
cx q[8],q[12]; //cycle: 1528 //cx q[3],q[7]
cx q[7],q[8]; //cycle: 1530 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1530 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1531 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1532 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1532 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1532 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1533 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 1534 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 1536 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1536 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[1]; //cycle: 1538 //cx q[5],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1538 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1540 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1540 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1541 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 1543 //cx q[5],q[6]
cx q[1],q[6]; //cycle: 1545 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1545 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1546 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1547 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1547 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[8]; //cycle: 1547 //cx q[6],q[3]
cx q[1],q[6]; //cycle: 1548 //cx q[4],q[5]
cx q[12],q[7]; //cycle: 1549 //cx q[7],q[6]
cx q[8],q[12]; //cycle: 1551 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1551 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1553 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1553 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1555 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1555 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1556 //cx q[7],q[6]
cx q[8],q[12]; //cycle: 1558 //cx q[3],q[7]
cx q[7],q[8]; //cycle: 1560 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1560 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1561 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1562 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1562 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[7],q[12]; //cycle: 1563 //cx q[6],q[7]
cx q[2],q[7]; //cycle: 1565 //cx q[0],q[6]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1567 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[7],q[12]; //cycle: 1568
cx q[7],q[2]; //cycle: 1574 //cx q[7],q[0]
cx q[7],q[12]; //cycle: 1576 //cx q[7],q[6]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1576 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1578 //u3(0.000000, 0.000000, -0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1578 //u3(0.000000, 0.000000, -0.785398) q[6]
swp q[7],q[12]; //cycle: 1579
cx q[2],q[7]; //cycle: 1585 //cx q[0],q[6]
swp q[7],q[12]; //cycle: 1587
cx q[7],q[2]; //cycle: 1593 //cx q[7],q[0]
cx q[12],q[7]; //cycle: 1595 //cx q[6],q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1595 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1596 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1597 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1597 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[2]; //cycle: 1598 //cx q[7],q[0]
cx q[12],q[8]; //cycle: 1598 //cx q[6],q[3]
swp q[7],q[8]; //cycle: 1600
cx q[3],q[8]; //cycle: 1606 //cx q[2],q[7]
cx q[2],q[3]; //cycle: 1608 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1608 //u3(0.000000, 0.000000, -0.785398) q[7]
swp q[2],q[7]; //cycle: 1610
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1610 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[7],q[8]; //cycle: 1616 //cx q[0],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1618 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[8]; //cycle: 1618 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[3],q[8]; //cycle: 1619 //cx q[2],q[7]
swp q[2],q[7]; //cycle: 1620
cx q[2],q[3]; //cycle: 1626 //cx q[0],q[2]
swp q[2],q[7]; //cycle: 1628
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 1628 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 1629 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 1630 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[8],q[7]; //cycle: 1634 //cx q[7],q[0]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1636 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1636 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1637 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[8],q[12]; //cycle: 1638 //cx q[7],q[6]
swp q[2],q[7]; //cycle: 1639
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1640 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[7],q[8]; //cycle: 1645 //cx q[3],q[7]
cx q[7],q[12]; //cycle: 1647 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1647 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1649 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1649 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[12]; //cycle: 1650 //cx q[7],q[6]
cx q[7],q[8]; //cycle: 1652 //cx q[3],q[7]
cx q[12],q[7]; //cycle: 1654 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1654 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1655 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 1656 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1656 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1656 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1657 //u3(0.000000, 0.000000, 0.785398) q[6]
swp q[7],q[12]; //cycle: 1658
cx q[7],q[1]; //cycle: 1664 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 1666 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1666 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[1]; //cycle: 1668 //cx q[5],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1668 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1670 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1670 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1671 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 1673 //cx q[5],q[6]
cx q[1],q[6]; //cycle: 1675 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1675 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1676 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1677 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 1677 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[12]; //cycle: 1677 //cx q[6],q[3]
cx q[1],q[6]; //cycle: 1678 //cx q[4],q[5]
cx q[8],q[7]; //cycle: 1679 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 1681 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1681 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1683 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1683 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1685 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1685 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1686 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 1688 //cx q[3],q[7]
cx q[7],q[12]; //cycle: 1690 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1690 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1691 //u3(0.000000, 0.000000, 0.785398) q[7]
swp q[3],q[8]; //cycle: 1692
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1692 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1692 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[12]; //cycle: 1693 //cx q[6],q[3]
cx q[3],q[2]; //cycle: 1698 //cx q[7],q[0]
cx q[8],q[3]; //cycle: 1700 //cx q[2],q[7]
swp q[7],q[8]; //cycle: 1702
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 1702 //u3(0.000000, 0.000000, -0.785398) q[7]
cx q[2],q[7]; //cycle: 1708 //cx q[0],q[2]
cx q[2],q[3]; //cycle: 1710 //cx q[0],q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1710 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 1712 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 1712 //u3(0.000000, 0.000000, -0.785398) q[7]
swp q[3],q[8]; //cycle: 1713
cx q[7],q[8]; //cycle: 1719 //cx q[2],q[7]
cx q[2],q[7]; //cycle: 1721 //cx q[0],q[2]
swp q[2],q[3]; //cycle: 1723
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1723 //u3(1.570796, 0.000000, 3.141593) q[2]
cx q[8],q[3]; //cycle: 1729 //cx q[7],q[0]
swp q[2],q[7]; //cycle: 1730
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1731 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1732 //u3(0.000000, 0.000000, 0.785398) q[7]
cx q[8],q[7]; //cycle: 1736 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 1738 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1738 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1740 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1740 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1742 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1742 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1743 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 1745 //cx q[3],q[7]
cx q[7],q[12]; //cycle: 1747 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1747 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1748 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1749 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[12]; //cycle: 1749 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1749 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1750 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[1]; //cycle: 1751 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 1753 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1753 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[1]; //cycle: 1755 //cx q[5],q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1755 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 1757 //u3(0.000000, 0.000000, -0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 1757 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[7],q[1]; //cycle: 1758 //cx q[6],q[4]
cx q[6],q[7]; //cycle: 1760 //cx q[5],q[6]
cx q[1],q[6]; //cycle: 1762 //cx q[4],q[5]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 1762 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1763 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[7],q[12]; //cycle: 1764 //cx q[6],q[3]
cx q[8],q[7]; //cycle: 1766 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 1768 //cx q[3],q[7]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1768 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[12],q[7]; //cycle: 1770 //cx q[3],q[6]
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 1770 //u3(0.000000, 0.000000, 0.785398) q[7]
u3(0.000000, 0.000000, -0.785398) q[12]; //cycle: 1772 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 1772 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[8],q[7]; //cycle: 1773 //cx q[7],q[6]
cx q[12],q[8]; //cycle: 1775 //cx q[3],q[7]
cx q[7],q[12]; //cycle: 1777 //cx q[6],q[3]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 1777 //u3(1.570796, 0.000000, 3.141593) q[7]
//1291 original gates
//1409 gates in generated circuit
//1203 original depth (cycles)
//1779 depth of generated circuit
//1369493 nodes popped from queue for processing.
//1871 nodes remain in queue.
