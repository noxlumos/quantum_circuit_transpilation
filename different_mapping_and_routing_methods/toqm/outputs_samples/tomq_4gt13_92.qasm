//Note: initial mapping (logical qubit at each location): 0, 4, 3, 2, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 0, 6, 3, 2, 1, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[1],q[0]; //cycle: 0 //cx q[4],q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[3],q[2]; //cycle: 1 //cx q[2],q[3]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 2 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 2 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[1],q[6]; //cycle: 3 //cx q[4],q[1]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 3 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[0],q[1]; //cycle: 5 //cx q[0],q[4]
swp q[0],q[5]; //cycle: 7
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 7 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[5]; //cycle: 13 //cx q[1],q[0]
cx q[6],q[1]; //cycle: 15 //cx q[1],q[4]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 15 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 17 //u3(0.000000, 0.000000, -0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 17 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[5],q[6]; //cycle: 18
cx q[6],q[1]; //cycle: 24 //cx q[0],q[4]
cx q[5],q[6]; //cycle: 26 //cx q[1],q[0]
swp q[0],q[5]; //cycle: 28
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 28 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 29 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 30 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[1],q[0]; //cycle: 34 //cx q[4],q[1]
swp q[2],q[3]; //cycle: 35
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 36 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 36 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 37 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[1],q[2]; //cycle: 41 //cx q[4],q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 43 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[2],q[3]; //cycle: 44
cx q[2],q[1]; //cycle: 50 //cx q[3],q[4]
cx q[2],q[3]; //cycle: 52 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 52 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 54 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 54 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[1],q[2]; //cycle: 55
cx q[2],q[3]; //cycle: 61 //cx q[4],q[2]
cx q[1],q[2]; //cycle: 63 //cx q[3],q[4]
swp q[0],q[1]; //cycle: 65
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 65 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 66 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[2],q[1]; //cycle: 71 //cx q[4],q[1]
cx q[6],q[2]; //cycle: 73 //cx q[0],q[4]
cx q[1],q[6]; //cycle: 75 //cx q[1],q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 75 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[1],q[2]; //cycle: 77 //cx q[1],q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 77 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 79 //u3(0.000000, 0.000000, -0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 79 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[2]; //cycle: 80 //cx q[0],q[4]
cx q[1],q[6]; //cycle: 82 //cx q[1],q[0]
cx q[2],q[1]; //cycle: 84 //cx q[4],q[1]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 84 //u3(1.570796, 0.000000, 3.141593) q[0]
swp q[0],q[1]; //cycle: 86
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 86 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 87 //u3(0.000000, 0.000000, 0.785398) q[4]
swp q[2],q[3]; //cycle: 88
cx q[2],q[1]; //cycle: 94 //cx q[2],q[3]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 96 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 96 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[2],q[1]; //cycle: 97 //cx q[2],q[3]
cx q[3],q[2]; //cycle: 99 //cx q[4],q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 101 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[1],q[2]; //cycle: 102
cx q[2],q[3]; //cycle: 108 //cx q[3],q[4]
cx q[2],q[1]; //cycle: 110 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 110 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 112 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 112 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[2],q[3]; //cycle: 113
cx q[2],q[1]; //cycle: 119 //cx q[4],q[2]
cx q[3],q[2]; //cycle: 121 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 123 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[6],q[2]; //cycle: 124 //cx q[0],q[4]
swp q[2],q[3]; //cycle: 126
cx q[1],q[2]; //cycle: 132 //cx q[2],q[3]
//66 original gates
//78 gates in generated circuit
//64 original depth (cycles)
//134 depth of generated circuit
//125513 nodes popped from queue for processing.
//1739 nodes remain in queue.
