//Note: initial mapping (logical qubit at each location): 1, 4, 0, 3, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 2, 0, 6, 3, 1, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[1],q[0]; //cycle: 0 //cx q[4],q[1]
cx q[3],q[2]; //cycle: 0 //cx q[3],q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 2 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 2 //u3(1.570796, 0.000000, 3.141593) q[3]
cx q[0],q[1]; //cycle: 2 //cx q[1],q[4]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 3 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 4 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 4 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[1],q[6]; //cycle: 5 //cx q[4],q[2]
swp q[2],q[3]; //cycle: 6
cx q[2],q[1]; //cycle: 12 //cx q[3],q[4]
cx q[6],q[2]; //cycle: 14 //cx q[2],q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 14 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[1]; //cycle: 16 //cx q[2],q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 16 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 18 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 18 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[2],q[1]; //cycle: 19 //cx q[3],q[4]
cx q[6],q[2]; //cycle: 21 //cx q[2],q[3]
swp q[0],q[1]; //cycle: 22
swp q[5],q[6]; //cycle: 23
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 23 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 24 //u3(0.000000, 0.000000, 0.785398) q[3]
swp q[2],q[3]; //cycle: 25
cx q[0],q[5]; //cycle: 29 //cx q[4],q[2]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 31 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[1],q[2]; //cycle: 31 //cx q[1],q[0]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 31 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[5],q[6]; //cycle: 32
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 32 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[0],q[1]; //cycle: 33 //cx q[4],q[1]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 35 //u3(0.000000, 0.000000, -0.785398) q[1]
swp q[1],q[2]; //cycle: 36
cx q[1],q[0]; //cycle: 42 //cx q[0],q[4]
cx q[1],q[2]; //cycle: 44 //cx q[0],q[1]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 44 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 46 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 46 //u3(0.000000, 0.000000, -0.785398) q[1]
swp q[0],q[1]; //cycle: 47
cx q[1],q[2]; //cycle: 53 //cx q[4],q[1]
swp q[2],q[6]; //cycle: 55
cx q[0],q[1]; //cycle: 55 //cx q[0],q[4]
swp q[0],q[5]; //cycle: 57
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 57 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 58 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 59 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[2],q[3]; //cycle: 61 //cx q[2],q[3]
cx q[6],q[5]; //cycle: 63 //cx q[1],q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 65 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 65 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 66 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[6],q[2]; //cycle: 67 //cx q[1],q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 69 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[2],q[3]; //cycle: 70
cx q[2],q[6]; //cycle: 76 //cx q[3],q[1]
cx q[2],q[3]; //cycle: 78 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 78 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 80 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 80 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[2],q[6]; //cycle: 81
cx q[2],q[3]; //cycle: 87 //cx q[1],q[2]
cx q[6],q[2]; //cycle: 89 //cx q[3],q[1]
swp q[5],q[6]; //cycle: 91
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 91 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 92 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[2],q[6]; //cycle: 97 //cx q[1],q[0]
cx q[1],q[2]; //cycle: 99 //cx q[4],q[1]
cx q[6],q[1]; //cycle: 101 //cx q[0],q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 101 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[6],q[2]; //cycle: 103 //cx q[0],q[1]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 103 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 105 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 105 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[1],q[2]; //cycle: 106 //cx q[4],q[1]
cx q[6],q[1]; //cycle: 108 //cx q[0],q[4]
cx q[2],q[6]; //cycle: 110 //cx q[1],q[0]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 110 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 112 //u3(1.570796, 0.000000, 3.141593) q[1]
swp q[5],q[6]; //cycle: 113
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 113 //u3(0.000000, 0.000000, 0.785398) q[1]
swp q[2],q[3]; //cycle: 114
cx q[2],q[6]; //cycle: 120 //cx q[2],q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 122 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 122 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[2],q[6]; //cycle: 123 //cx q[2],q[3]
cx q[3],q[2]; //cycle: 125 //cx q[1],q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 127 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[2],q[6]; //cycle: 128
cx q[2],q[3]; //cycle: 134 //cx q[3],q[1]
cx q[2],q[6]; //cycle: 136 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 136 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 138 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 138 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[2],q[6]; //cycle: 139
cx q[3],q[2]; //cycle: 145 //cx q[1],q[2]
swp q[2],q[6]; //cycle: 147
cx q[2],q[3]; //cycle: 153 //cx q[3],q[1]
cx q[6],q[2]; //cycle: 155 //cx q[2],q[3]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 155 //u3(1.570796, 0.000000, 3.141593) q[1]
//83 original gates
//100 gates in generated circuit
//80 original depth (cycles)
//157 depth of generated circuit
//103455 nodes popped from queue for processing.
//1001 nodes remain in queue.
