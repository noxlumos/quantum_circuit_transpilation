//Note: initial mapping (logical qubit at each location): 4, 3, 0, -1, -1, 1, 5, -1, -1, -1, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 2, 5, 11, 1, 0, 6, 10, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(3.141593, 0.000000, 3.141593) q[0]; //cycle: 0 //u3(3.141593, 0.000000, 3.141593) q[4]
u3(3.141593, 0.000000, 3.141593) q[10]; //cycle: 0 //u3(3.141593, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(1.570796, 0.000000, 3.141593) q[10]; //cycle: 1 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[1],q[0]; //cycle: 1 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 2 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[5],q[0]; //cycle: 3 //cx q[1],q[4]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 5 //u3(0.000000, 0.000000, 0.785398) q[4]
swp q[1],q[2]; //cycle: 6
cx q[0],q[1]; //cycle: 12 //cx q[4],q[0]
swp q[5],q[6]; //cycle: 13
cx q[5],q[0]; //cycle: 19 //cx q[5],q[4]
swp q[5],q[6]; //cycle: 21
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 21 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[1],q[6]; //cycle: 27 //cx q[0],q[5]
cx q[1],q[0]; //cycle: 29 //cx q[0],q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 29 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 31 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 31 //u3(0.000000, 0.000000, -0.785398) q[0]
swp q[1],q[6]; //cycle: 32
cx q[1],q[0]; //cycle: 38 //cx q[5],q[4]
cx q[6],q[1]; //cycle: 40 //cx q[0],q[5]
swp q[0],q[5]; //cycle: 41
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 42 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 43 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 44 //u3(0.000000, 0.000000, 0.785398) q[5]
cx q[5],q[6]; //cycle: 47 //cx q[4],q[0]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 49 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 49 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[5],q[6]; //cycle: 50 //cx q[4],q[0]
cx q[10],q[5]; //cycle: 52 //cx q[6],q[4]
cx q[6],q[10]; //cycle: 54 //cx q[0],q[6]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 54 //u3(0.000000, 0.000000, -0.785398) q[4]
cx q[6],q[5]; //cycle: 56 //cx q[0],q[4]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 56 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 58 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 58 //u3(0.000000, 0.000000, -0.785398) q[0]
cx q[10],q[5]; //cycle: 59 //cx q[6],q[4]
cx q[6],q[10]; //cycle: 61 //cx q[0],q[6]
cx q[5],q[6]; //cycle: 63 //cx q[4],q[0]
u3(1.570796, 0.000000, 3.141593) q[10]; //cycle: 63 //u3(1.570796, 0.000000, 3.141593) q[6]
cx q[5],q[10]; //cycle: 65 //cx q[4],q[6]
u3(3.141593, 0.000000, 3.141593) q[10]; //cycle: 67 //u3(3.141593, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 68 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[10],q[11]; //cycle: 69 //cx q[6],q[2]
swp q[1],q[6]; //cycle: 70
cx q[6],q[10]; //cycle: 76 //cx q[5],q[6]
cx q[11],q[6]; //cycle: 78 //cx q[2],q[5]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 78 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[11],q[10]; //cycle: 80 //cx q[2],q[6]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 80 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(0.000000, 0.000000, -0.785398) q[11]; //cycle: 82 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[10]; //cycle: 82 //u3(0.000000, 0.000000, -0.785398) q[6]
cx q[6],q[10]; //cycle: 83 //cx q[5],q[6]
cx q[11],q[6]; //cycle: 85 //cx q[2],q[5]
cx q[10],q[11]; //cycle: 87 //cx q[6],q[2]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 87 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 88 //u3(0.000000, 0.000000, 0.785398) q[5]
u3(1.570796, 0.000000, 3.141593) q[10]; //cycle: 89 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.785398) q[11]; //cycle: 89 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 90 //u3(0.000000, 0.000000, 0.785398) q[6]
cx q[6],q[11]; //cycle: 90 //cx q[5],q[2]
cx q[10],q[6]; //cycle: 92 //cx q[6],q[5]
cx q[11],q[10]; //cycle: 94 //cx q[2],q[6]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 94 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[11],q[6]; //cycle: 96 //cx q[2],q[5]
u3(0.000000, 0.000000, 0.785398) q[10]; //cycle: 96 //u3(0.000000, 0.000000, 0.785398) q[6]
u3(0.000000, 0.000000, -0.785398) q[11]; //cycle: 98 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 98 //u3(0.000000, 0.000000, -0.785398) q[5]
cx q[10],q[6]; //cycle: 99 //cx q[6],q[5]
cx q[11],q[10]; //cycle: 101 //cx q[2],q[6]
cx q[6],q[11]; //cycle: 103 //cx q[5],q[2]
u3(1.570796, 0.000000, 3.141593) q[10]; //cycle: 103 //u3(1.570796, 0.000000, 3.141593) q[6]
//70 original gates
//76 gates in generated circuit
//72 original depth (cycles)
//105 depth of generated circuit
//42866 nodes popped from queue for processing.
//1158 nodes remain in queue.
