//Note: initial mapping (logical qubit at each location): 0, 3, 4, -1, -1, -1, 2, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 0, 7, 6, 1, 2, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(3.141593, 0.000000, 3.141593) q[0]; //cycle: 0 //u3(3.141593, 0.000000, 3.141593) q[0]
u3(3.141593, 0.000000, 3.141593) q[7]; //cycle: 0 //u3(3.141593, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[1],q[0]; //cycle: 2 //cx q[3],q[0]
cx q[2],q[1]; //cycle: 4 //cx q[4],q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 6 //u3(0.000000, 0.000000, -0.785398) q[3]
swp q[0],q[1]; //cycle: 7
cx q[1],q[2]; //cycle: 13 //cx q[0],q[4]
cx q[1],q[0]; //cycle: 15 //cx q[0],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 15 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 17 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 17 //u3(0.000000, 0.000000, -0.785398) q[3]
swp q[1],q[2]; //cycle: 18
cx q[1],q[0]; //cycle: 24 //cx q[4],q[3]
cx q[2],q[1]; //cycle: 26 //cx q[0],q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 28 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 29 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 30 //u3(0.000000, 0.000000, 0.785398) q[4]
swp q[0],q[1]; //cycle: 31
cx q[1],q[2]; //cycle: 37 //cx q[3],q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 39 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 39 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[1],q[6]; //cycle: 40 //cx q[3],q[2]
cx q[0],q[1]; //cycle: 42 //cx q[4],q[3]
swp q[0],q[5]; //cycle: 44
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 44 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[6],q[5]; //cycle: 50 //cx q[2],q[4]
cx q[6],q[1]; //cycle: 52 //cx q[2],q[3]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 52 //u3(0.000000, 0.000000, 0.785398) q[4]
swp q[0],q[5]; //cycle: 53
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 54 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 54 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[0],q[1]; //cycle: 59 //cx q[4],q[3]
swp q[0],q[1]; //cycle: 61
cx q[6],q[1]; //cycle: 67 //cx q[2],q[4]
swp q[0],q[5]; //cycle: 68
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 69 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 70 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 71 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[5],q[6]; //cycle: 74 //cx q[3],q[2]
cx q[6],q[5]; //cycle: 76 //cx q[2],q[3]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 78 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[7]; //cycle: 79 //cx q[2],q[1]
cx q[1],q[6]; //cycle: 81 //cx q[4],q[2]
cx q[7],q[1]; //cycle: 83 //cx q[1],q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 83 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 85 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[6]; //cycle: 85 //cx q[1],q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 87 //u3(0.000000, 0.000000, -0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 87 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[1],q[6]; //cycle: 88 //cx q[4],q[2]
cx q[7],q[1]; //cycle: 90 //cx q[1],q[4]
cx q[6],q[7]; //cycle: 92 //cx q[2],q[1]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 92 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 93 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[7],q[6]; //cycle: 94 //cx q[1],q[2]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 94 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 96 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[7],q[2]; //cycle: 97 //cx q[1],q[0]
cx q[1],q[7]; //cycle: 99 //cx q[4],q[1]
cx q[2],q[1]; //cycle: 101 //cx q[0],q[4]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 101 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[2],q[7]; //cycle: 103 //cx q[0],q[1]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 103 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 105 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 105 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[1],q[7]; //cycle: 106 //cx q[4],q[1]
cx q[2],q[1]; //cycle: 108 //cx q[0],q[4]
cx q[7],q[2]; //cycle: 110 //cx q[1],q[0]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 110 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[2],q[7]; //cycle: 112 //cx q[0],q[1]
//69 original gates
//76 gates in generated circuit
//71 original depth (cycles)
//114 depth of generated circuit
//39562 nodes popped from queue for processing.
//1637 nodes remain in queue.
