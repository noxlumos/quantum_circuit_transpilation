//Note: initial mapping (logical qubit at each location): 0, 3, 4, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 0, 5, 6, 1, 2, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(3.141593, 0.000000, 3.141593) q[2]; //cycle: 0 //u3(3.141593, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[5]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[1],q[0]; //cycle: 1 //cx q[3],q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 2 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[2],q[1]; //cycle: 3 //cx q[4],q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 5 //u3(0.000000, 0.000000, -0.785398) q[3]
swp q[0],q[1]; //cycle: 6
cx q[1],q[2]; //cycle: 12 //cx q[0],q[4]
cx q[1],q[0]; //cycle: 14 //cx q[0],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 14 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[0]
swp q[0],q[1]; //cycle: 17
cx q[2],q[1]; //cycle: 23 //cx q[4],q[3]
swp q[1],q[2]; //cycle: 25
cx q[0],q[1]; //cycle: 31 //cx q[0],q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 33 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 34 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 35 //u3(0.000000, 0.000000, 0.785398) q[4]
swp q[1],q[2]; //cycle: 36
cx q[1],q[0]; //cycle: 42 //cx q[3],q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 44 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 44 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[1],q[6]; //cycle: 45 //cx q[3],q[2]
cx q[2],q[1]; //cycle: 47 //cx q[4],q[3]
cx q[6],q[2]; //cycle: 49 //cx q[2],q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 49 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[6],q[1]; //cycle: 51 //cx q[2],q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 51 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 53 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 53 //u3(0.000000, 0.000000, -0.785398) q[3]
cx q[2],q[1]; //cycle: 54 //cx q[4],q[3]
cx q[6],q[2]; //cycle: 56 //cx q[2],q[4]
cx q[1],q[6]; //cycle: 58 //cx q[3],q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 58 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[1],q[2]; //cycle: 60 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 60 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[6],q[5]; //cycle: 61 //cx q[2],q[1]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 62 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 63 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[2],q[6]; //cycle: 64 //cx q[4],q[2]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 66 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[5],q[6]; //cycle: 67
cx q[6],q[2]; //cycle: 73 //cx q[1],q[4]
cx q[6],q[5]; //cycle: 75 //cx q[1],q[2]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 75 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[6]; //cycle: 77 //u3(0.000000, 0.000000, -0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[5]; //cycle: 77 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[5],q[6]; //cycle: 78
cx q[2],q[6]; //cycle: 84 //cx q[4],q[2]
swp q[5],q[6]; //cycle: 86
cx q[6],q[2]; //cycle: 92 //cx q[1],q[4]
cx q[5],q[6]; //cycle: 94 //cx q[2],q[1]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 94 //u3(1.570796, 0.000000, 3.141593) q[4]
swp q[0],q[1]; //cycle: 96
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 96 //u3(0.000000, 0.000000, 0.785398) q[1]
swp q[2],q[6]; //cycle: 97
cx q[5],q[6]; //cycle: 103 //cx q[2],q[4]
cx q[2],q[1]; //cycle: 103 //cx q[1],q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 105 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 106 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[6],q[2]; //cycle: 107 //cx q[4],q[1]
cx q[1],q[6]; //cycle: 109 //cx q[0],q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 109 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[1],q[2]; //cycle: 111 //cx q[0],q[1]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 111 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 113 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 113 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[6],q[2]; //cycle: 114 //cx q[4],q[1]
cx q[1],q[6]; //cycle: 116 //cx q[0],q[4]
cx q[2],q[1]; //cycle: 118 //cx q[1],q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 118 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[2],q[6]; //cycle: 120 //cx q[1],q[4]
cx q[1],q[6]; //cycle: 122 //cx q[0],q[4]
//69 original gates
//78 gates in generated circuit
//70 original depth (cycles)
//124 depth of generated circuit
//62944 nodes popped from queue for processing.
//1003 nodes remain in queue.
