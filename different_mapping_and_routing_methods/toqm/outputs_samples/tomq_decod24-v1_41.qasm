//Note: initial mapping (logical qubit at each location): 3, 2, 1, 4, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 4, 2, 1, 0, 3, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(3.141593, 0.000000, 3.141593) q[2]; //cycle: 0 //u3(3.141593, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[1],q[0]; //cycle: 1 //cx q[2],q[3]
u3(0.000000, 0.000000, 0.785398) q[4]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[3],q[2]; //cycle: 2 //cx q[4],q[1]
cx q[4],q[3]; //cycle: 4 //cx q[0],q[4]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 6 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[2],q[3]; //cycle: 7
cx q[3],q[4]; //cycle: 13 //cx q[1],q[0]
cx q[3],q[2]; //cycle: 15 //cx q[1],q[4]
u3(0.000000, 0.000000, 0.785398) q[4]; //cycle: 15 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 17 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 17 //u3(0.000000, 0.000000, -0.785398) q[1]
swp q[2],q[3]; //cycle: 18
cx q[4],q[3]; //cycle: 24 //cx q[0],q[4]
swp q[2],q[3]; //cycle: 26
cx q[3],q[4]; //cycle: 32 //cx q[1],q[0]
cx q[2],q[3]; //cycle: 34 //cx q[4],q[1]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 34 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 35 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[4]; //cycle: 36 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 36 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[3]; //cycle: 36 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 37 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[2],q[1]; //cycle: 38 //cx q[4],q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 40 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[0],q[1]; //cycle: 41
cx q[1],q[2]; //cycle: 47 //cx q[3],q[4]
cx q[1],q[0]; //cycle: 49 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 49 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 51 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 51 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[1],q[2]; //cycle: 52
cx q[1],q[0]; //cycle: 58 //cx q[4],q[2]
cx q[2],q[1]; //cycle: 60 //cx q[3],q[4]
swp q[2],q[3]; //cycle: 62
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 62 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 63 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[1],q[2]; //cycle: 68 //cx q[4],q[1]
swp q[4],q[8]; //cycle: 69
swp q[1],q[7]; //cycle: 70
swp q[2],q[3]; //cycle: 72
cx q[8],q[7]; //cycle: 76 //cx q[0],q[4]
cx q[3],q[8]; //cycle: 78 //cx q[1],q[0]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 78 //u3(0.000000, 0.000000, -0.785398) q[4]
swp q[0],q[1]; //cycle: 79
u3(0.000000, 0.000000, 0.785398) q[8]; //cycle: 80 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[2],q[7]; //cycle: 81
cx q[1],q[7]; //cycle: 87 //cx q[2],q[3]
cx q[3],q[2]; //cycle: 87 //cx q[1],q[4]
u3(0.000000, 0.000000, -0.785398) q[3]; //cycle: 89 //u3(0.000000, 0.000000, -0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 89 //u3(0.000000, 0.000000, -0.785398) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 89 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 89 //u3(0.000000, 0.000000, 0.785398) q[2]
swp q[3],q[8]; //cycle: 90
cx q[1],q[7]; //cycle: 90 //cx q[2],q[3]
cx q[3],q[2]; //cycle: 96 //cx q[0],q[4]
cx q[8],q[3]; //cycle: 98 //cx q[1],q[0]
swp q[2],q[7]; //cycle: 99
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 100 //u3(1.570796, 0.000000, 3.141593) q[0]
cx q[7],q[8]; //cycle: 105 //cx q[4],q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 107 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 108 //u3(0.000000, 0.000000, 0.785398) q[4]
cx q[7],q[1]; //cycle: 109 //cx q[4],q[2]
cx q[2],q[7]; //cycle: 111 //cx q[3],q[4]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 111 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[2],q[1]; //cycle: 113 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 113 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 115 //u3(0.000000, 0.000000, -0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 115 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[7],q[1]; //cycle: 116 //cx q[4],q[2]
cx q[2],q[7]; //cycle: 118 //cx q[3],q[4]
cx q[1],q[2]; //cycle: 120 //cx q[2],q[3]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 120 //u3(1.570796, 0.000000, 3.141593) q[4]
swp q[7],q[8]; //cycle: 121
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 122 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[2],q[7]; //cycle: 127 //cx q[3],q[1]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 129 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[7]; //cycle: 129 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 130 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[7],q[1]; //cycle: 130 //cx q[1],q[2]
cx q[2],q[7]; //cycle: 132 //cx q[3],q[1]
cx q[1],q[2]; //cycle: 134 //cx q[2],q[3]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 134 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[1],q[7]; //cycle: 136 //cx q[2],q[1]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 136 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 138 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[7]; //cycle: 138 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[2],q[7]; //cycle: 139 //cx q[3],q[1]
cx q[1],q[2]; //cycle: 141 //cx q[2],q[3]
cx q[7],q[1]; //cycle: 143 //cx q[1],q[2]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 143 //u3(1.570796, 0.000000, 3.141593) q[3]
cx q[2],q[1]; //cycle: 145 //cx q[3],q[2]
u3(3.141593, 0.000000, 3.141593) q[2]; //cycle: 147 //u3(3.141593, 0.000000, 3.141593) q[3]
cx q[2],q[7]; //cycle: 148 //cx q[3],q[1]
//85 original gates
//99 gates in generated circuit
//85 original depth (cycles)
//150 depth of generated circuit
//67175 nodes popped from queue for processing.
//1181 nodes remain in queue.
