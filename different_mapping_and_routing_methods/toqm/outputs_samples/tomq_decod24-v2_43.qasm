//Note: initial mapping (logical qubit at each location): 3, 2, 0, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 2, 6, 1, 0, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(3.141593, 0.000000, 3.141593) q[2]; //cycle: 0 //u3(3.141593, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 0 //u3(0.000000, 0.000000, 0.785398) q[3]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 1 //u3(0.000000, 0.000000, 0.785398) q[1]
cx q[1],q[0]; //cycle: 1 //cx q[2],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 1 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 2 //u3(0.000000, 0.000000, 0.785398) q[0]
cx q[2],q[1]; //cycle: 3 //cx q[0],q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 5 //u3(0.000000, 0.000000, -0.785398) q[2]
swp q[0],q[1]; //cycle: 6
cx q[1],q[2]; //cycle: 12 //cx q[3],q[0]
cx q[1],q[0]; //cycle: 14 //cx q[3],q[2]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 14 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 16 //u3(0.000000, 0.000000, -0.785398) q[3]
swp q[1],q[2]; //cycle: 17
cx q[1],q[0]; //cycle: 23 //cx q[0],q[2]
cx q[2],q[1]; //cycle: 25 //cx q[3],q[0]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 27 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 28 //u3(0.000000, 0.000000, 0.785398) q[0]
swp q[0],q[1]; //cycle: 29
cx q[1],q[2]; //cycle: 35 //cx q[2],q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 37 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 37 //u3(0.000000, 0.000000, 0.785398) q[2]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 38 //u3(0.000000, 0.000000, 0.785398) q[3]
cx q[0],q[1]; //cycle: 38 //cx q[0],q[2]
swp q[1],q[2]; //cycle: 40
cx q[1],q[0]; //cycle: 46 //cx q[3],q[0]
cx q[2],q[1]; //cycle: 48 //cx q[2],q[3]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 48 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 50 //u3(0.000000, 0.000000, 0.785398) q[3]
swp q[0],q[1]; //cycle: 51
cx q[2],q[1]; //cycle: 57 //cx q[2],q[0]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 59 //u3(0.000000, 0.000000, -0.785398) q[2]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 59 //u3(0.000000, 0.000000, -0.785398) q[0]
cx q[0],q[1]; //cycle: 60 //cx q[3],q[0]
swp q[1],q[2]; //cycle: 62
cx q[1],q[0]; //cycle: 68 //cx q[2],q[3]
cx q[2],q[1]; //cycle: 70 //cx q[0],q[2]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 70 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 72 //u3(0.000000, 0.000000, 0.785398) q[0]
u3(0.000000, 0.000000, 0.785398) q[1]; //cycle: 72 //u3(0.000000, 0.000000, 0.785398) q[2]
cx q[1],q[2]; //cycle: 73 //cx q[2],q[0]
cx q[6],q[1]; //cycle: 75 //cx q[1],q[2]
cx q[2],q[6]; //cycle: 77 //cx q[0],q[1]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 77 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[2],q[1]; //cycle: 79 //cx q[0],q[2]
u3(0.000000, 0.000000, 0.785398) q[6]; //cycle: 79 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 81 //u3(0.000000, 0.000000, -0.785398) q[0]
u3(0.000000, 0.000000, -0.785398) q[1]; //cycle: 81 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[6],q[1]; //cycle: 82 //cx q[1],q[2]
cx q[2],q[6]; //cycle: 84 //cx q[0],q[1]
cx q[1],q[2]; //cycle: 86 //cx q[2],q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 86 //u3(1.570796, 0.000000, 3.141593) q[1]
cx q[0],q[1]; //cycle: 88 //cx q[3],q[2]
u3(3.141593, 0.000000, 3.141593) q[2]; //cycle: 88 //u3(3.141593, 0.000000, 3.141593) q[0]
u3(3.141593, 0.000000, 3.141593) q[0]; //cycle: 90 //u3(3.141593, 0.000000, 3.141593) q[3]
//52 original gates
//58 gates in generated circuit
//51 original depth (cycles)
//91 depth of generated circuit
//11416 nodes popped from queue for processing.
//1044 nodes remain in queue.
