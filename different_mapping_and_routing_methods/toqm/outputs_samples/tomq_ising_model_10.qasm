//Note: initial mapping (logical qubit at each location): 7, 6, 9, 8, 1, 3, 2, 5, 0, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 8, 4, 6, 5, 12, 7, 1, 0, 3, 2, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 0 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, -0.120000) q[12]; //cycle: 1 //u3(0.000000, 0.000000, -0.120000) q[4]
u3(0.000000, 0.000000, -0.300000) q[8]; //cycle: 1 //u3(0.000000, 0.000000, -0.300000) q[0]
u3(0.000000, 0.000000, 0.300000) q[4]; //cycle: 1 //u3(0.000000, 0.000000, 0.300000) q[1]
u3(0.000000, 0.000000, -0.360000) q[6]; //cycle: 1 //u3(0.000000, 0.000000, -0.360000) q[2]
u3(0.000000, 0.000000, 0.360000) q[5]; //cycle: 1 //u3(0.000000, 0.000000, 0.360000) q[3]
u3(0.000000, 0.000000, -0.220000) q[0]; //cycle: 1 //u3(0.000000, 0.000000, -0.220000) q[7]
u3(0.000000, 0.000000, 0.080000) q[3]; //cycle: 1 //u3(0.000000, 0.000000, 0.080000) q[8]
u3(0.000000, 0.000000, 0.220000) q[1]; //cycle: 1 //u3(0.000000, 0.000000, 0.220000) q[6]
u3(0.000000, 0.000000, 0.120000) q[7]; //cycle: 1 //u3(0.000000, 0.000000, 0.120000) q[5]
u3(0.000000, 0.000000, -0.080000) q[2]; //cycle: 1 //u3(0.000000, 0.000000, -0.080000) q[9]
u3(0.000000, 0.000000, -1.200000) q[4]; //cycle: 2 //u3(0.000000, 0.000000, -1.200000) q[1]
u3(0.000000, 0.000000, -1.440000) q[5]; //cycle: 2 //u3(0.000000, 0.000000, -1.440000) q[3]
u3(0.000000, 0.000000, -0.480000) q[7]; //cycle: 2 //u3(0.000000, 0.000000, -0.480000) q[5]
u3(0.000000, 0.000000, 0.880000) q[0]; //cycle: 2 //u3(0.000000, 0.000000, 0.880000) q[7]
u3(0.000000, 0.000000, 0.320000) q[2]; //cycle: 2 //u3(0.000000, 0.000000, 0.320000) q[9]
cx q[1],q[0]; //cycle: 3 //cx q[6],q[7]
cx q[3],q[2]; //cycle: 3 //cx q[8],q[9]
cx q[8],q[4]; //cycle: 3 //cx q[0],q[1]
cx q[6],q[5]; //cycle: 3 //cx q[2],q[3]
cx q[12],q[7]; //cycle: 3 //cx q[4],q[5]
u3(0.000000, 0.000000, 0.600000) q[4]; //cycle: 5 //u3(0.000000, 0.000000, 0.600000) q[1]
u3(0.000000, 0.000000, 0.720000) q[5]; //cycle: 5 //u3(0.000000, 0.000000, 0.720000) q[3]
u3(0.000000, 0.000000, 0.240000) q[7]; //cycle: 5 //u3(0.000000, 0.000000, 0.240000) q[5]
u3(0.000000, 0.000000, -0.440000) q[0]; //cycle: 5 //u3(0.000000, 0.000000, -0.440000) q[7]
u3(0.000000, 0.000000, -0.160000) q[2]; //cycle: 5 //u3(0.000000, 0.000000, -0.160000) q[9]
cx q[8],q[4]; //cycle: 6 //cx q[0],q[1]
cx q[6],q[5]; //cycle: 6 //cx q[2],q[3]
cx q[12],q[7]; //cycle: 6 //cx q[4],q[5]
cx q[1],q[0]; //cycle: 6 //cx q[6],q[7]
cx q[3],q[2]; //cycle: 6 //cx q[8],q[9]
u3(0.000000, 0.000000, 0.260000) q[4]; //cycle: 8 //u3(0.000000, 0.000000, 0.260000) q[1]
u3(0.000000, 0.000000, -0.260000) q[6]; //cycle: 8 //u3(0.000000, 0.000000, -0.260000) q[2]
u3(0.000000, 0.000000, -0.260000) q[5]; //cycle: 8 //u3(0.000000, 0.000000, -0.260000) q[3]
u3(0.000000, 0.000000, 0.260000) q[12]; //cycle: 8 //u3(0.000000, 0.000000, 0.260000) q[4]
u3(0.000000, 0.000000, 0.380000) q[7]; //cycle: 8 //u3(0.000000, 0.000000, 0.380000) q[5]
u3(0.000000, 0.000000, -0.380000) q[1]; //cycle: 8 //u3(0.000000, 0.000000, -0.380000) q[6]
u3(0.000000, 0.000000, -0.260000) q[0]; //cycle: 8 //u3(0.000000, 0.000000, -0.260000) q[7]
u3(0.000000, 0.000000, 0.260000) q[3]; //cycle: 8 //u3(0.000000, 0.000000, 0.260000) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 8 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 8 //u3(1.570796, 0.000000, 3.141593) q[9]
swp q[5],q[11]; //cycle: 9
u3(0.000000, 0.000000, 1.040000) q[6]; //cycle: 9 //u3(0.000000, 0.000000, 1.040000) q[2]
u3(0.000000, 0.000000, -1.040000) q[12]; //cycle: 9 //u3(0.000000, 0.000000, -1.040000) q[4]
u3(0.000000, 0.000000, 1.520000) q[1]; //cycle: 9 //u3(0.000000, 0.000000, 1.520000) q[6]
u3(0.000000, 0.000000, -1.040000) q[3]; //cycle: 9 //u3(0.000000, 0.000000, -1.040000) q[8]
u3(0.000000, 0.000000, -1.920000) q[8]; //cycle: 9 //u3(0.000000, 0.000000, -1.920000) q[0]
u3(0.000000, 0.000000, -1.920000) q[2]; //cycle: 9 //u3(0.000000, 0.000000, -1.920000) q[9]
cx q[7],q[1]; //cycle: 10 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 10 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 10 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(0.000000, 0.000000, -0.288000) q[8]; //cycle: 11 //u3(0.000000, 0.000000, -0.288000) q[0]
u3(0.000000, 0.000000, -1.824000) q[2]; //cycle: 11 //u3(0.000000, 0.000000, -1.824000) q[9]
swp q[6],q[7]; //cycle: 12
u3(0.000000, 0.000000, -0.760000) q[1]; //cycle: 12 //u3(0.000000, 0.000000, -0.760000) q[6]
u3(0.000000, 0.000000, -0.900000) q[8]; //cycle: 12 //u3(0.000000, 0.000000, -0.900000) q[0]
u3(0.000000, 0.000000, -0.240000) q[2]; //cycle: 12 //u3(0.000000, 0.000000, -0.240000) q[9]
swp q[0],q[1]; //cycle: 13
swp q[4],q[8]; //cycle: 13
u3(0.000000, 0.000000, 0.960000) q[2]; //cycle: 13 //u3(0.000000, 0.000000, 0.960000) q[9]
swp q[2],q[3]; //cycle: 14
cx q[11],q[12]; //cycle: 15 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.520000) q[12]; //cycle: 17 //u3(0.000000, 0.000000, 0.520000) q[4]
swp q[5],q[6]; //cycle: 18
cx q[11],q[12]; //cycle: 18 //cx q[3],q[4]
cx q[8],q[7]; //cycle: 19 //cx q[1],q[2]
cx q[1],q[2]; //cycle: 20 //cx q[7],q[8]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 20 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 20 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, -0.520000) q[7]; //cycle: 21 //u3(0.000000, 0.000000, -0.520000) q[2]
u3(0.000000, 0.000000, -1.920000) q[11]; //cycle: 21 //u3(0.000000, 0.000000, -1.920000) q[3]
u3(0.000000, 0.000000, -1.920000) q[12]; //cycle: 21 //u3(0.000000, 0.000000, -1.920000) q[4]
u3(0.000000, 0.000000, 0.520000) q[2]; //cycle: 22 //u3(0.000000, 0.000000, 0.520000) q[8]
cx q[8],q[7]; //cycle: 22 //cx q[1],q[2]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 22 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 22 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[1],q[2]; //cycle: 23 //cx q[7],q[8]
u3(0.000000, 0.000000, -1.056000) q[11]; //cycle: 23 //u3(0.000000, 0.000000, -1.056000) q[3]
u3(0.000000, 0.000000, -1.440000) q[12]; //cycle: 23 //u3(0.000000, 0.000000, -1.440000) q[4]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 24 //u3(1.570796, 0.000000, 3.141593) q[2]
cx q[5],q[0]; //cycle: 24 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 24 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, 1.080000) q[11]; //cycle: 24 //u3(0.000000, 0.000000, 1.080000) q[3]
u3(0.000000, 0.000000, -0.360000) q[12]; //cycle: 24 //u3(0.000000, 0.000000, -0.360000) q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 25 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 25 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(0.000000, 0.000000, -1.920000) q[8]; //cycle: 25 //u3(0.000000, 0.000000, -1.920000) q[1]
u3(0.000000, 0.000000, -1.920000) q[7]; //cycle: 25 //u3(0.000000, 0.000000, -1.920000) q[2]
u3(0.000000, 0.000000, -4.320000) q[11]; //cycle: 25 //u3(0.000000, 0.000000, -4.320000) q[3]
swp q[11],q[12]; //cycle: 26
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 26 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 26 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, -1.920000) q[1]; //cycle: 26 //u3(0.000000, 0.000000, -1.920000) q[7]
u3(0.000000, 0.000000, -1.920000) q[2]; //cycle: 26 //u3(0.000000, 0.000000, -1.920000) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 26 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 26 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, -1.920000) q[5]; //cycle: 27 //u3(0.000000, 0.000000, -1.920000) q[5]
u3(0.000000, 0.000000, -1.920000) q[0]; //cycle: 27 //u3(0.000000, 0.000000, -1.920000) q[6]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 27 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 27 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(0.000000, 0.000000, 0.864000) q[8]; //cycle: 27 //u3(0.000000, 0.000000, 0.864000) q[1]
u3(0.000000, 0.000000, 1.152000) q[7]; //cycle: 27 //u3(0.000000, 0.000000, 1.152000) q[2]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 28 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 28 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.900000) q[8]; //cycle: 28 //u3(0.000000, 0.000000, 0.900000) q[1]
u3(0.000000, 0.000000, -1.080000) q[7]; //cycle: 28 //u3(0.000000, 0.000000, -1.080000) q[2]
u3(0.000000, 0.000000, -0.288000) q[1]; //cycle: 28 //u3(0.000000, 0.000000, -0.288000) q[7]
u3(0.000000, 0.000000, 1.248000) q[2]; //cycle: 28 //u3(0.000000, 0.000000, 1.248000) q[8]
u3(0.000000, 0.000000, -0.660000) q[1]; //cycle: 29 //u3(0.000000, 0.000000, -0.660000) q[7]
u3(0.000000, 0.000000, -0.576000) q[5]; //cycle: 29 //u3(0.000000, 0.000000, -0.576000) q[5]
u3(0.000000, 0.000000, 1.536000) q[0]; //cycle: 29 //u3(0.000000, 0.000000, 1.536000) q[6]
u3(0.000000, 0.000000, 0.240000) q[2]; //cycle: 29 //u3(0.000000, 0.000000, 0.240000) q[8]
u3(0.000000, 0.000000, -3.600000) q[8]; //cycle: 29 //u3(0.000000, 0.000000, -3.600000) q[1]
u3(0.000000, 0.000000, 0.360000) q[5]; //cycle: 30 //u3(0.000000, 0.000000, 0.360000) q[5]
u3(0.000000, 0.000000, 0.660000) q[0]; //cycle: 30 //u3(0.000000, 0.000000, 0.660000) q[6]
u3(0.000000, 0.000000, 2.640000) q[1]; //cycle: 30 //u3(0.000000, 0.000000, 2.640000) q[7]
cx q[2],q[3]; //cycle: 30 //cx q[8],q[9]
cx q[4],q[8]; //cycle: 30 //cx q[0],q[1]
u3(0.000000, 0.000000, -1.440000) q[5]; //cycle: 31 //u3(0.000000, 0.000000, -1.440000) q[5]
cx q[0],q[1]; //cycle: 31 //cx q[6],q[7]
cx q[7],q[12]; //cycle: 32 //cx q[2],q[3]
cx q[11],q[5]; //cycle: 32 //cx q[4],q[5]
u3(0.000000, 0.000000, -0.480000) q[3]; //cycle: 32 //u3(0.000000, 0.000000, -0.480000) q[9]
u3(0.000000, 0.000000, 1.800000) q[8]; //cycle: 32 //u3(0.000000, 0.000000, 1.800000) q[1]
cx q[2],q[3]; //cycle: 33 //cx q[8],q[9]
cx q[4],q[8]; //cycle: 33 //cx q[0],q[1]
u3(0.000000, 0.000000, -1.320000) q[1]; //cycle: 33 //u3(0.000000, 0.000000, -1.320000) q[7]
cx q[0],q[1]; //cycle: 34 //cx q[6],q[7]
u3(0.000000, 0.000000, 2.160000) q[12]; //cycle: 34 //u3(0.000000, 0.000000, 2.160000) q[3]
u3(0.000000, 0.000000, 0.720000) q[5]; //cycle: 34 //u3(0.000000, 0.000000, 0.720000) q[5]
cx q[7],q[12]; //cycle: 35 //cx q[2],q[3]
cx q[11],q[5]; //cycle: 35 //cx q[4],q[5]
u3(0.000000, 0.000000, 0.780000) q[2]; //cycle: 35 //u3(0.000000, 0.000000, 0.780000) q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 35 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(0.000000, 0.000000, 0.780000) q[8]; //cycle: 35 //u3(0.000000, 0.000000, 0.780000) q[1]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 35 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, -1.140000) q[0]; //cycle: 36 //u3(0.000000, 0.000000, -1.140000) q[6]
u3(0.000000, 0.000000, -0.780000) q[1]; //cycle: 36 //u3(0.000000, 0.000000, -0.780000) q[7]
u3(0.000000, 0.000000, -3.120000) q[2]; //cycle: 36 //u3(0.000000, 0.000000, -3.120000) q[8]
u3(0.000000, 0.000000, -0.960000) q[3]; //cycle: 36 //u3(0.000000, 0.000000, -0.960000) q[9]
u3(0.000000, 0.000000, -0.960000) q[4]; //cycle: 36 //u3(0.000000, 0.000000, -0.960000) q[0]
u3(0.000000, 0.000000, -0.780000) q[7]; //cycle: 37 //u3(0.000000, 0.000000, -0.780000) q[2]
u3(0.000000, 0.000000, -0.780000) q[12]; //cycle: 37 //u3(0.000000, 0.000000, -0.780000) q[3]
u3(0.000000, 0.000000, 0.780000) q[11]; //cycle: 37 //u3(0.000000, 0.000000, 0.780000) q[4]
u3(0.000000, 0.000000, 1.140000) q[5]; //cycle: 37 //u3(0.000000, 0.000000, 1.140000) q[5]
u3(0.000000, 0.000000, 4.560000) q[0]; //cycle: 37 //u3(0.000000, 0.000000, 4.560000) q[6]
cx q[1],q[2]; //cycle: 37 //cx q[7],q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 37 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 37 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 3.120000) q[7]; //cycle: 38 //u3(0.000000, 0.000000, 3.120000) q[2]
u3(0.000000, 0.000000, -3.120000) q[11]; //cycle: 38 //u3(0.000000, 0.000000, -3.120000) q[4]
cx q[5],q[0]; //cycle: 38 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.912000) q[3]; //cycle: 38 //u3(0.000000, 0.000000, -0.912000) q[9]
u3(0.000000, 0.000000, -0.144000) q[4]; //cycle: 38 //u3(0.000000, 0.000000, -0.144000) q[0]
cx q[8],q[7]; //cycle: 39 //cx q[1],q[2]
cx q[12],q[11]; //cycle: 39 //cx q[3],q[4]
u3(0.000000, 0.000000, 1.560000) q[2]; //cycle: 39 //u3(0.000000, 0.000000, 1.560000) q[8]
u3(0.000000, 0.000000, -0.400000) q[3]; //cycle: 39 //u3(0.000000, 0.000000, -0.400000) q[9]
u3(0.000000, 0.000000, -1.500000) q[4]; //cycle: 39 //u3(0.000000, 0.000000, -1.500000) q[0]
u3(0.000000, 0.000000, -2.280000) q[0]; //cycle: 40 //u3(0.000000, 0.000000, -2.280000) q[6]
cx q[1],q[2]; //cycle: 40 //cx q[7],q[8]
u3(0.000000, 0.000000, 1.600000) q[3]; //cycle: 40 //u3(0.000000, 0.000000, 1.600000) q[9]
u3(0.000000, 0.000000, -1.560000) q[7]; //cycle: 41 //u3(0.000000, 0.000000, -1.560000) q[2]
u3(0.000000, 0.000000, 1.560000) q[11]; //cycle: 41 //u3(0.000000, 0.000000, 1.560000) q[4]
cx q[5],q[0]; //cycle: 41 //cx q[5],q[6]
cx q[8],q[7]; //cycle: 42 //cx q[1],q[2]
cx q[12],q[11]; //cycle: 42 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 42 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 42 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 43 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 43 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, -0.960000) q[1]; //cycle: 43 //u3(0.000000, 0.000000, -0.960000) q[7]
u3(0.000000, 0.000000, -0.960000) q[2]; //cycle: 43 //u3(0.000000, 0.000000, -0.960000) q[8]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 44 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 44 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 44 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, -0.960000) q[5]; //cycle: 44 //u3(0.000000, 0.000000, -0.960000) q[5]
u3(0.000000, 0.000000, -0.960000) q[0]; //cycle: 44 //u3(0.000000, 0.000000, -0.960000) q[6]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 44 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 44 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 44 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(0.000000, 0.000000, -0.960000) q[8]; //cycle: 45 //u3(0.000000, 0.000000, -0.960000) q[1]
u3(0.000000, 0.000000, -0.960000) q[7]; //cycle: 45 //u3(0.000000, 0.000000, -0.960000) q[2]
u3(0.000000, 0.000000, -0.960000) q[12]; //cycle: 45 //u3(0.000000, 0.000000, -0.960000) q[3]
u3(0.000000, 0.000000, -0.960000) q[11]; //cycle: 45 //u3(0.000000, 0.000000, -0.960000) q[4]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 45 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 45 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, -0.144000) q[1]; //cycle: 45 //u3(0.000000, 0.000000, -0.144000) q[7]
u3(0.000000, 0.000000, 0.624000) q[2]; //cycle: 45 //u3(0.000000, 0.000000, 0.624000) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 46 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 46 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 46 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 46 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, -0.288000) q[5]; //cycle: 46 //u3(0.000000, 0.000000, -0.288000) q[5]
u3(0.000000, 0.000000, 0.768000) q[0]; //cycle: 46 //u3(0.000000, 0.000000, 0.768000) q[6]
u3(0.000000, 0.000000, -1.100000) q[1]; //cycle: 46 //u3(0.000000, 0.000000, -1.100000) q[7]
u3(0.000000, 0.000000, 0.400000) q[2]; //cycle: 46 //u3(0.000000, 0.000000, 0.400000) q[8]
u3(0.000000, 0.000000, 0.432000) q[8]; //cycle: 47 //u3(0.000000, 0.000000, 0.432000) q[1]
u3(0.000000, 0.000000, 0.576000) q[7]; //cycle: 47 //u3(0.000000, 0.000000, 0.576000) q[2]
u3(0.000000, 0.000000, -0.528000) q[12]; //cycle: 47 //u3(0.000000, 0.000000, -0.528000) q[3]
u3(0.000000, 0.000000, -0.720000) q[11]; //cycle: 47 //u3(0.000000, 0.000000, -0.720000) q[4]
u3(0.000000, 0.000000, 0.600000) q[5]; //cycle: 47 //u3(0.000000, 0.000000, 0.600000) q[5]
u3(0.000000, 0.000000, 1.100000) q[0]; //cycle: 47 //u3(0.000000, 0.000000, 1.100000) q[6]
u3(0.000000, 0.000000, 4.400000) q[1]; //cycle: 47 //u3(0.000000, 0.000000, 4.400000) q[7]
cx q[2],q[3]; //cycle: 47 //cx q[8],q[9]
u3(0.000000, 0.000000, 1.500000) q[8]; //cycle: 48 //u3(0.000000, 0.000000, 1.500000) q[1]
u3(0.000000, 0.000000, -1.800000) q[7]; //cycle: 48 //u3(0.000000, 0.000000, -1.800000) q[2]
u3(0.000000, 0.000000, 1.800000) q[12]; //cycle: 48 //u3(0.000000, 0.000000, 1.800000) q[3]
u3(0.000000, 0.000000, -0.600000) q[11]; //cycle: 48 //u3(0.000000, 0.000000, -0.600000) q[4]
u3(0.000000, 0.000000, -2.400000) q[5]; //cycle: 48 //u3(0.000000, 0.000000, -2.400000) q[5]
cx q[0],q[1]; //cycle: 48 //cx q[6],q[7]
u3(0.000000, 0.000000, -6.000000) q[8]; //cycle: 49 //u3(0.000000, 0.000000, -6.000000) q[1]
u3(0.000000, 0.000000, -7.200000) q[12]; //cycle: 49 //u3(0.000000, 0.000000, -7.200000) q[3]
u3(0.000000, 0.000000, -0.800000) q[3]; //cycle: 49 //u3(0.000000, 0.000000, -0.800000) q[9]
cx q[11],q[5]; //cycle: 49 //cx q[4],q[5]
cx q[4],q[8]; //cycle: 50 //cx q[0],q[1]
cx q[7],q[12]; //cycle: 50 //cx q[2],q[3]
u3(0.000000, 0.000000, -2.200000) q[1]; //cycle: 50 //u3(0.000000, 0.000000, -2.200000) q[7]
cx q[2],q[3]; //cycle: 50 //cx q[8],q[9]
u3(0.000000, 0.000000, 1.200000) q[5]; //cycle: 51 //u3(0.000000, 0.000000, 1.200000) q[5]
cx q[0],q[1]; //cycle: 51 //cx q[6],q[7]
u3(0.000000, 0.000000, 3.000000) q[8]; //cycle: 52 //u3(0.000000, 0.000000, 3.000000) q[1]
u3(0.000000, 0.000000, 3.600000) q[12]; //cycle: 52 //u3(0.000000, 0.000000, 3.600000) q[3]
u3(0.000000, 0.000000, 1.300000) q[2]; //cycle: 52 //u3(0.000000, 0.000000, 1.300000) q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 52 //u3(1.570796, 0.000000, 3.141593) q[9]
cx q[11],q[5]; //cycle: 52 //cx q[4],q[5]
cx q[4],q[8]; //cycle: 53 //cx q[0],q[1]
cx q[7],q[12]; //cycle: 53 //cx q[2],q[3]
u3(0.000000, 0.000000, -1.900000) q[0]; //cycle: 53 //u3(0.000000, 0.000000, -1.900000) q[6]
u3(0.000000, 0.000000, -1.300000) q[1]; //cycle: 53 //u3(0.000000, 0.000000, -1.300000) q[7]
u3(0.000000, 0.000000, -5.200000) q[2]; //cycle: 53 //u3(0.000000, 0.000000, -5.200000) q[8]
u3(0.000000, 0.000000, -0.000000) q[3]; //cycle: 53 //u3(0.000000, 0.000000, -0.000000) q[9]
u3(0.000000, 0.000000, 1.900000) q[5]; //cycle: 54 //u3(0.000000, 0.000000, 1.900000) q[5]
u3(0.000000, 0.000000, 7.600000) q[0]; //cycle: 54 //u3(0.000000, 0.000000, 7.600000) q[6]
cx q[1],q[2]; //cycle: 54 //cx q[7],q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 54 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(0.000000, 0.000000, 1.300000) q[11]; //cycle: 54 //u3(0.000000, 0.000000, 1.300000) q[4]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 55 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, -5.200000) q[11]; //cycle: 55 //u3(0.000000, 0.000000, -5.200000) q[4]
cx q[5],q[0]; //cycle: 55 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.000000) q[3]; //cycle: 55 //u3(0.000000, 0.000000, -0.000000) q[9]
u3(0.000000, 0.000000, 1.300000) q[8]; //cycle: 55 //u3(0.000000, 0.000000, 1.300000) q[1]
u3(0.000000, 0.000000, -1.300000) q[7]; //cycle: 55 //u3(0.000000, 0.000000, -1.300000) q[2]
u3(0.000000, 0.000000, -1.300000) q[12]; //cycle: 55 //u3(0.000000, 0.000000, -1.300000) q[3]
u3(0.000000, 0.000000, 5.200000) q[7]; //cycle: 56 //u3(0.000000, 0.000000, 5.200000) q[2]
u3(0.000000, 0.000000, 2.600000) q[2]; //cycle: 56 //u3(0.000000, 0.000000, 2.600000) q[8]
u3(0.000000, 0.000000, -0.000000) q[4]; //cycle: 56 //u3(0.000000, 0.000000, -0.000000) q[0]
cx q[12],q[11]; //cycle: 56 //cx q[3],q[4]
u3(0.000000, 0.000000, -0.560000) q[3]; //cycle: 56 //u3(0.000000, 0.000000, -0.560000) q[9]
cx q[8],q[7]; //cycle: 57 //cx q[1],q[2]
u3(0.000000, 0.000000, -3.800000) q[0]; //cycle: 57 //u3(0.000000, 0.000000, -3.800000) q[6]
cx q[1],q[2]; //cycle: 57 //cx q[7],q[8]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 57 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 2.240000) q[3]; //cycle: 57 //u3(0.000000, 0.000000, 2.240000) q[9]
u3(0.000000, 0.000000, 2.600000) q[11]; //cycle: 58 //u3(0.000000, 0.000000, 2.600000) q[4]
cx q[5],q[0]; //cycle: 58 //cx q[5],q[6]
u3(0.000000, 0.000000, -0.000000) q[4]; //cycle: 58 //u3(0.000000, 0.000000, -0.000000) q[0]
u3(0.000000, 0.000000, -2.600000) q[7]; //cycle: 59 //u3(0.000000, 0.000000, -2.600000) q[2]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 59 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 59 //u3(1.570796, 0.000000, 3.141593) q[8]
cx q[12],q[11]; //cycle: 59 //cx q[3],q[4]
u3(0.000000, 0.000000, -2.100000) q[4]; //cycle: 59 //u3(0.000000, 0.000000, -2.100000) q[0]
cx q[8],q[7]; //cycle: 60 //cx q[1],q[2]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 60 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 60 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, -0.000000) q[1]; //cycle: 60 //u3(0.000000, 0.000000, -0.000000) q[7]
u3(0.000000, 0.000000, -0.000000) q[2]; //cycle: 60 //u3(0.000000, 0.000000, -0.000000) q[8]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 61 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 61 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, -0.000000) q[5]; //cycle: 61 //u3(0.000000, 0.000000, -0.000000) q[5]
u3(0.000000, 0.000000, -0.000000) q[0]; //cycle: 61 //u3(0.000000, 0.000000, -0.000000) q[6]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 61 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 61 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 62 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, -0.000000) q[1]; //cycle: 62 //u3(0.000000, 0.000000, -0.000000) q[7]
u3(0.000000, 0.000000, 0.000000) q[2]; //cycle: 62 //u3(0.000000, 0.000000, 0.000000) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 62 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 62 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, -0.000000) q[12]; //cycle: 62 //u3(0.000000, 0.000000, -0.000000) q[3]
u3(0.000000, 0.000000, -0.000000) q[11]; //cycle: 62 //u3(0.000000, 0.000000, -0.000000) q[4]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 62 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 63 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 63 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, -0.000000) q[5]; //cycle: 63 //u3(0.000000, 0.000000, -0.000000) q[5]
u3(0.000000, 0.000000, 0.000000) q[0]; //cycle: 63 //u3(0.000000, 0.000000, 0.000000) q[6]
u3(0.000000, 0.000000, -1.540000) q[1]; //cycle: 63 //u3(0.000000, 0.000000, -1.540000) q[7]
u3(0.000000, 0.000000, 0.560000) q[2]; //cycle: 63 //u3(0.000000, 0.000000, 0.560000) q[8]
u3(0.000000, 0.000000, -0.000000) q[8]; //cycle: 63 //u3(0.000000, 0.000000, -0.000000) q[1]
u3(0.000000, 0.000000, -0.000000) q[7]; //cycle: 63 //u3(0.000000, 0.000000, -0.000000) q[2]
u3(0.000000, 0.000000, -0.000000) q[12]; //cycle: 64 //u3(0.000000, 0.000000, -0.000000) q[3]
u3(0.000000, 0.000000, -0.000000) q[11]; //cycle: 64 //u3(0.000000, 0.000000, -0.000000) q[4]
u3(0.000000, 0.000000, 0.840000) q[5]; //cycle: 64 //u3(0.000000, 0.000000, 0.840000) q[5]
u3(0.000000, 0.000000, 1.540000) q[0]; //cycle: 64 //u3(0.000000, 0.000000, 1.540000) q[6]
u3(0.000000, 0.000000, 6.160000) q[1]; //cycle: 64 //u3(0.000000, 0.000000, 6.160000) q[7]
cx q[2],q[3]; //cycle: 64 //cx q[8],q[9]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 64 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 64 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 2.520000) q[12]; //cycle: 65 //u3(0.000000, 0.000000, 2.520000) q[3]
u3(0.000000, 0.000000, -0.840000) q[11]; //cycle: 65 //u3(0.000000, 0.000000, -0.840000) q[4]
u3(0.000000, 0.000000, -3.360000) q[5]; //cycle: 65 //u3(0.000000, 0.000000, -3.360000) q[5]
cx q[0],q[1]; //cycle: 65 //cx q[6],q[7]
u3(0.000000, 0.000000, 0.000000) q[8]; //cycle: 65 //u3(0.000000, 0.000000, 0.000000) q[1]
u3(0.000000, 0.000000, 0.000000) q[7]; //cycle: 65 //u3(0.000000, 0.000000, 0.000000) q[2]
u3(0.000000, 0.000000, 2.100000) q[8]; //cycle: 66 //u3(0.000000, 0.000000, 2.100000) q[1]
u3(0.000000, 0.000000, -2.520000) q[7]; //cycle: 66 //u3(0.000000, 0.000000, -2.520000) q[2]
u3(0.000000, 0.000000, -1.120000) q[3]; //cycle: 66 //u3(0.000000, 0.000000, -1.120000) q[9]
u3(0.000000, 0.000000, -10.080000) q[12]; //cycle: 66 //u3(0.000000, 0.000000, -10.080000) q[3]
cx q[11],q[5]; //cycle: 66 //cx q[4],q[5]
u3(0.000000, 0.000000, -8.400000) q[8]; //cycle: 67 //u3(0.000000, 0.000000, -8.400000) q[1]
u3(0.000000, 0.000000, -3.080000) q[1]; //cycle: 67 //u3(0.000000, 0.000000, -3.080000) q[7]
cx q[2],q[3]; //cycle: 67 //cx q[8],q[9]
cx q[7],q[12]; //cycle: 67 //cx q[2],q[3]
cx q[4],q[8]; //cycle: 68 //cx q[0],q[1]
u3(0.000000, 0.000000, 1.680000) q[5]; //cycle: 68 //u3(0.000000, 0.000000, 1.680000) q[5]
cx q[0],q[1]; //cycle: 68 //cx q[6],q[7]
u3(0.000000, 0.000000, 1.820000) q[2]; //cycle: 69 //u3(0.000000, 0.000000, 1.820000) q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 69 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(0.000000, 0.000000, 5.040000) q[12]; //cycle: 69 //u3(0.000000, 0.000000, 5.040000) q[3]
cx q[11],q[5]; //cycle: 69 //cx q[4],q[5]
u3(0.000000, 0.000000, 4.200000) q[8]; //cycle: 70 //u3(0.000000, 0.000000, 4.200000) q[1]
u3(0.000000, 0.000000, -2.660000) q[0]; //cycle: 70 //u3(0.000000, 0.000000, -2.660000) q[6]
u3(0.000000, 0.000000, -1.820000) q[1]; //cycle: 70 //u3(0.000000, 0.000000, -1.820000) q[7]
u3(0.000000, 0.000000, -7.280000) q[2]; //cycle: 70 //u3(0.000000, 0.000000, -7.280000) q[8]
u3(0.000000, 0.000000, 0.960000) q[3]; //cycle: 70 //u3(0.000000, 0.000000, 0.960000) q[9]
cx q[7],q[12]; //cycle: 70 //cx q[2],q[3]
cx q[4],q[8]; //cycle: 71 //cx q[0],q[1]
u3(0.000000, 0.000000, 1.820000) q[11]; //cycle: 71 //u3(0.000000, 0.000000, 1.820000) q[4]
u3(0.000000, 0.000000, 2.660000) q[5]; //cycle: 71 //u3(0.000000, 0.000000, 2.660000) q[5]
u3(0.000000, 0.000000, 10.640000) q[0]; //cycle: 71 //u3(0.000000, 0.000000, 10.640000) q[6]
cx q[1],q[2]; //cycle: 71 //cx q[7],q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 71 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(0.000000, 0.000000, -1.820000) q[7]; //cycle: 72 //u3(0.000000, 0.000000, -1.820000) q[2]
u3(0.000000, 0.000000, -1.820000) q[12]; //cycle: 72 //u3(0.000000, 0.000000, -1.820000) q[3]
u3(0.000000, 0.000000, -7.280000) q[11]; //cycle: 72 //u3(0.000000, 0.000000, -7.280000) q[4]
cx q[5],q[0]; //cycle: 72 //cx q[5],q[6]
u3(0.000000, 0.000000, 0.912000) q[3]; //cycle: 72 //u3(0.000000, 0.000000, 0.912000) q[9]
u3(0.000000, 0.000000, 1.820000) q[8]; //cycle: 73 //u3(0.000000, 0.000000, 1.820000) q[1]
u3(0.000000, 0.000000, 3.640000) q[2]; //cycle: 73 //u3(0.000000, 0.000000, 3.640000) q[8]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 73 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 7.280000) q[7]; //cycle: 73 //u3(0.000000, 0.000000, 7.280000) q[2]
cx q[12],q[11]; //cycle: 73 //cx q[3],q[4]
u3(0.000000, 0.000000, -0.720000) q[3]; //cycle: 73 //u3(0.000000, 0.000000, -0.720000) q[9]
u3(0.000000, 0.000000, -5.320000) q[0]; //cycle: 74 //u3(0.000000, 0.000000, -5.320000) q[6]
cx q[1],q[2]; //cycle: 74 //cx q[7],q[8]
u3(0.000000, 0.000000, 0.960000) q[4]; //cycle: 74 //u3(0.000000, 0.000000, 0.960000) q[0]
cx q[8],q[7]; //cycle: 74 //cx q[1],q[2]
u3(0.000000, 0.000000, 2.880000) q[3]; //cycle: 74 //u3(0.000000, 0.000000, 2.880000) q[9]
u3(0.000000, 0.000000, 3.640000) q[11]; //cycle: 75 //u3(0.000000, 0.000000, 3.640000) q[4]
cx q[5],q[0]; //cycle: 75 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 75 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 76 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 76 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(0.000000, 0.000000, -3.640000) q[7]; //cycle: 76 //u3(0.000000, 0.000000, -3.640000) q[2]
cx q[12],q[11]; //cycle: 76 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.144000) q[4]; //cycle: 76 //u3(0.000000, 0.000000, 0.144000) q[0]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 77 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 77 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.960000) q[1]; //cycle: 77 //u3(0.000000, 0.000000, 0.960000) q[7]
u3(0.000000, 0.000000, 0.960000) q[2]; //cycle: 77 //u3(0.000000, 0.000000, 0.960000) q[8]
cx q[8],q[7]; //cycle: 77 //cx q[1],q[2]
u3(0.000000, 0.000000, -2.700000) q[4]; //cycle: 77 //u3(0.000000, 0.000000, -2.700000) q[0]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 78 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 78 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.960000) q[5]; //cycle: 78 //u3(0.000000, 0.000000, 0.960000) q[5]
u3(0.000000, 0.000000, 0.960000) q[0]; //cycle: 78 //u3(0.000000, 0.000000, 0.960000) q[6]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 78 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 78 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 79 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 79 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.960000) q[12]; //cycle: 79 //u3(0.000000, 0.000000, 0.960000) q[3]
u3(0.000000, 0.000000, 0.960000) q[11]; //cycle: 79 //u3(0.000000, 0.000000, 0.960000) q[4]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 79 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 79 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.144000) q[1]; //cycle: 79 //u3(0.000000, 0.000000, 0.144000) q[7]
u3(0.000000, 0.000000, -0.624000) q[2]; //cycle: 79 //u3(0.000000, 0.000000, -0.624000) q[8]
u3(0.000000, 0.000000, 0.960000) q[8]; //cycle: 80 //u3(0.000000, 0.000000, 0.960000) q[1]
u3(0.000000, 0.000000, 0.960000) q[7]; //cycle: 80 //u3(0.000000, 0.000000, 0.960000) q[2]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 80 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 80 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.288000) q[5]; //cycle: 80 //u3(0.000000, 0.000000, 0.288000) q[5]
u3(0.000000, 0.000000, -0.768000) q[0]; //cycle: 80 //u3(0.000000, 0.000000, -0.768000) q[6]
u3(0.000000, 0.000000, -1.980000) q[1]; //cycle: 80 //u3(0.000000, 0.000000, -1.980000) q[7]
u3(0.000000, 0.000000, 0.720000) q[2]; //cycle: 80 //u3(0.000000, 0.000000, 0.720000) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 81 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 81 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 0.528000) q[12]; //cycle: 81 //u3(0.000000, 0.000000, 0.528000) q[3]
u3(0.000000, 0.000000, 0.720000) q[11]; //cycle: 81 //u3(0.000000, 0.000000, 0.720000) q[4]
u3(0.000000, 0.000000, 1.080000) q[5]; //cycle: 81 //u3(0.000000, 0.000000, 1.080000) q[5]
u3(0.000000, 0.000000, 1.980000) q[0]; //cycle: 81 //u3(0.000000, 0.000000, 1.980000) q[6]
u3(0.000000, 0.000000, 7.920000) q[1]; //cycle: 81 //u3(0.000000, 0.000000, 7.920000) q[7]
cx q[2],q[3]; //cycle: 81 //cx q[8],q[9]
u3(0.000000, 0.000000, -0.432000) q[8]; //cycle: 82 //u3(0.000000, 0.000000, -0.432000) q[1]
u3(0.000000, 0.000000, -0.576000) q[7]; //cycle: 82 //u3(0.000000, 0.000000, -0.576000) q[2]
u3(0.000000, 0.000000, 3.240000) q[12]; //cycle: 82 //u3(0.000000, 0.000000, 3.240000) q[3]
u3(0.000000, 0.000000, -1.080000) q[11]; //cycle: 82 //u3(0.000000, 0.000000, -1.080000) q[4]
u3(0.000000, 0.000000, -4.320000) q[5]; //cycle: 82 //u3(0.000000, 0.000000, -4.320000) q[5]
cx q[0],q[1]; //cycle: 82 //cx q[6],q[7]
u3(0.000000, 0.000000, -1.440000) q[3]; //cycle: 83 //u3(0.000000, 0.000000, -1.440000) q[9]
u3(0.000000, 0.000000, 2.700000) q[8]; //cycle: 83 //u3(0.000000, 0.000000, 2.700000) q[1]
u3(0.000000, 0.000000, -3.240000) q[7]; //cycle: 83 //u3(0.000000, 0.000000, -3.240000) q[2]
u3(0.000000, 0.000000, -12.960000) q[12]; //cycle: 83 //u3(0.000000, 0.000000, -12.960000) q[3]
cx q[11],q[5]; //cycle: 83 //cx q[4],q[5]
u3(0.000000, 0.000000, -3.960000) q[1]; //cycle: 84 //u3(0.000000, 0.000000, -3.960000) q[7]
cx q[2],q[3]; //cycle: 84 //cx q[8],q[9]
u3(0.000000, 0.000000, -10.800000) q[8]; //cycle: 84 //u3(0.000000, 0.000000, -10.800000) q[1]
cx q[7],q[12]; //cycle: 84 //cx q[2],q[3]
u3(0.000000, 0.000000, 2.160000) q[5]; //cycle: 85 //u3(0.000000, 0.000000, 2.160000) q[5]
cx q[0],q[1]; //cycle: 85 //cx q[6],q[7]
cx q[4],q[8]; //cycle: 85 //cx q[0],q[1]
u3(0.000000, 0.000000, 2.340000) q[2]; //cycle: 86 //u3(0.000000, 0.000000, 2.340000) q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 86 //u3(1.570796, 0.000000, 3.141593) q[9]
u3(0.000000, 0.000000, 6.480000) q[12]; //cycle: 86 //u3(0.000000, 0.000000, 6.480000) q[3]
cx q[11],q[5]; //cycle: 86 //cx q[4],q[5]
u3(0.000000, 0.000000, -3.420000) q[0]; //cycle: 87 //u3(0.000000, 0.000000, -3.420000) q[6]
u3(0.000000, 0.000000, -2.340000) q[1]; //cycle: 87 //u3(0.000000, 0.000000, -2.340000) q[7]
u3(0.000000, 0.000000, -9.360000) q[2]; //cycle: 87 //u3(0.000000, 0.000000, -9.360000) q[8]
u3(0.000000, 0.000000, 1.920000) q[3]; //cycle: 87 //u3(0.000000, 0.000000, 1.920000) q[9]
u3(0.000000, 0.000000, 5.400000) q[8]; //cycle: 87 //u3(0.000000, 0.000000, 5.400000) q[1]
cx q[7],q[12]; //cycle: 87 //cx q[2],q[3]
u3(0.000000, 0.000000, 2.340000) q[11]; //cycle: 88 //u3(0.000000, 0.000000, 2.340000) q[4]
u3(0.000000, 0.000000, 3.420000) q[5]; //cycle: 88 //u3(0.000000, 0.000000, 3.420000) q[5]
u3(0.000000, 0.000000, 13.680000) q[0]; //cycle: 88 //u3(0.000000, 0.000000, 13.680000) q[6]
cx q[1],q[2]; //cycle: 88 //cx q[7],q[8]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 88 //u3(1.570796, 0.000000, 3.141593) q[9]
cx q[4],q[8]; //cycle: 88 //cx q[0],q[1]
cx q[5],q[0]; //cycle: 89 //cx q[5],q[6]
u3(0.000000, 0.000000, 1.824000) q[3]; //cycle: 89 //u3(0.000000, 0.000000, 1.824000) q[9]
u3(0.000000, 0.000000, -2.340000) q[7]; //cycle: 89 //u3(0.000000, 0.000000, -2.340000) q[2]
u3(0.000000, 0.000000, -2.340000) q[12]; //cycle: 89 //u3(0.000000, 0.000000, -2.340000) q[3]
u3(0.000000, 0.000000, -9.360000) q[11]; //cycle: 89 //u3(0.000000, 0.000000, -9.360000) q[4]
u3(0.000000, 0.000000, 4.680000) q[2]; //cycle: 90 //u3(0.000000, 0.000000, 4.680000) q[8]
u3(0.000000, 0.000000, 2.340000) q[8]; //cycle: 90 //u3(0.000000, 0.000000, 2.340000) q[1]
u3(0.000000, 0.000000, 9.360000) q[7]; //cycle: 90 //u3(0.000000, 0.000000, 9.360000) q[2]
cx q[12],q[11]; //cycle: 90 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 90 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, -6.840000) q[0]; //cycle: 91 //u3(0.000000, 0.000000, -6.840000) q[6]
cx q[1],q[2]; //cycle: 91 //cx q[7],q[8]
cx q[8],q[7]; //cycle: 91 //cx q[1],q[2]
u3(0.000000, 0.000000, 1.920000) q[4]; //cycle: 91 //u3(0.000000, 0.000000, 1.920000) q[0]
u3(0.000000, 0.000000, 4.680000) q[11]; //cycle: 92 //u3(0.000000, 0.000000, 4.680000) q[4]
cx q[5],q[0]; //cycle: 92 //cx q[5],q[6]
u3(1.570796, 0.000000, 3.141593) q[4]; //cycle: 92 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 93 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 93 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(0.000000, 0.000000, -4.680000) q[7]; //cycle: 93 //u3(0.000000, 0.000000, -4.680000) q[2]
cx q[12],q[11]; //cycle: 93 //cx q[3],q[4]
u3(0.000000, 0.000000, 0.288000) q[4]; //cycle: 93 //u3(0.000000, 0.000000, 0.288000) q[0]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 94 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 94 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 1.920000) q[1]; //cycle: 94 //u3(0.000000, 0.000000, 1.920000) q[7]
u3(0.000000, 0.000000, 1.920000) q[2]; //cycle: 94 //u3(0.000000, 0.000000, 1.920000) q[8]
cx q[8],q[7]; //cycle: 94 //cx q[1],q[2]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 95 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 95 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 1.920000) q[5]; //cycle: 95 //u3(0.000000, 0.000000, 1.920000) q[5]
u3(0.000000, 0.000000, 1.920000) q[0]; //cycle: 95 //u3(0.000000, 0.000000, 1.920000) q[6]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 95 //u3(1.570796, 0.000000, 3.141593) q[7]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 95 //u3(1.570796, 0.000000, 3.141593) q[8]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 96 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 96 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 1.920000) q[12]; //cycle: 96 //u3(0.000000, 0.000000, 1.920000) q[3]
u3(0.000000, 0.000000, 1.920000) q[11]; //cycle: 96 //u3(0.000000, 0.000000, 1.920000) q[4]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 96 //u3(1.570796, 0.000000, 3.141593) q[5]
u3(1.570796, 0.000000, 3.141593) q[0]; //cycle: 96 //u3(1.570796, 0.000000, 3.141593) q[6]
u3(0.000000, 0.000000, 0.288000) q[1]; //cycle: 96 //u3(0.000000, 0.000000, 0.288000) q[7]
u3(0.000000, 0.000000, -1.248000) q[2]; //cycle: 96 //u3(0.000000, 0.000000, -1.248000) q[8]
u3(0.000000, 0.000000, 1.920000) q[8]; //cycle: 97 //u3(0.000000, 0.000000, 1.920000) q[1]
u3(0.000000, 0.000000, 1.920000) q[7]; //cycle: 97 //u3(0.000000, 0.000000, 1.920000) q[2]
u3(1.570796, 0.000000, 3.141593) q[12]; //cycle: 97 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[11]; //cycle: 97 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(0.000000, 0.000000, 0.576000) q[5]; //cycle: 97 //u3(0.000000, 0.000000, 0.576000) q[5]
u3(0.000000, 0.000000, -1.536000) q[0]; //cycle: 97 //u3(0.000000, 0.000000, -1.536000) q[6]
u3(1.570796, 0.000000, 3.141593) q[8]; //cycle: 98 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[7]; //cycle: 98 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(0.000000, 0.000000, 1.056000) q[12]; //cycle: 98 //u3(0.000000, 0.000000, 1.056000) q[3]
u3(0.000000, 0.000000, 1.440000) q[11]; //cycle: 98 //u3(0.000000, 0.000000, 1.440000) q[4]
u3(0.000000, 0.000000, -0.864000) q[8]; //cycle: 99 //u3(0.000000, 0.000000, -0.864000) q[1]
u3(0.000000, 0.000000, -1.152000) q[7]; //cycle: 99 //u3(0.000000, 0.000000, -1.152000) q[2]
//480 original gates
//487 gates in generated circuit
//90 original depth (cycles)
//100 depth of generated circuit
//126 nodes popped from queue for processing.
//79 nodes remain in queue.
