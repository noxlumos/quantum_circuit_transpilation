//Note: initial mapping (logical qubit at each location): 1, 0, 4, 3, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
//Note: initial mapping (location of each logical qubit): 1, 0, 6, 3, 2, 
OPENQASM 2.0;
include "qelib1.inc";
qreg q[20];
creg c[20];
u3(1.570796, 0.000000, 3.926991) q[0]; //cycle: 0 //u3(1.570796, 0.000000, 3.926991) q[1]
u3(0.000000, 0.000000, 0.196350) q[3]; //cycle: 0 //u3(0.000000, 0.000000, 0.196350) q[3]
u3(1.570796, 0.000000, 3.534292) q[6]; //cycle: 0 //u3(1.570796, 0.000000, 3.534292) q[2]
u3(0.000000, 0.000000, 6.283185) q[1]; //cycle: 0 //u3(0.000000, 0.000000, 6.283185) q[0]
cx q[1],q[0]; //cycle: 1 //cx q[0],q[1]
cx q[3],q[2]; //cycle: 1 //cx q[3],q[4]
u3(0.000000, 0.000000, 6.283185) q[0]; //cycle: 3 //u3(0.000000, 0.000000, 6.283185) q[1]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 3 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 3 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.785398, 1.570796, 4.712389) q[1]; //cycle: 3 //u3(0.785398, 1.570796, 4.712389) q[0]
cx q[3],q[2]; //cycle: 4 //cx q[3],q[4]
cx q[1],q[0]; //cycle: 4 //cx q[0],q[1]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 6 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 6 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(-0.785398, 1.570796, 4.712389) q[1]; //cycle: 6 //u3(-0.785398, 1.570796, 4.712389) q[0]
u3(0.000000, 0.000000, 6.283185) q[0]; //cycle: 6 //u3(0.000000, 0.000000, 6.283185) q[1]
cx q[1],q[6]; //cycle: 7 //cx q[0],q[2]
cx q[3],q[2]; //cycle: 7 //cx q[3],q[4]
u3(0.392699, 1.570796, 4.712389) q[1]; //cycle: 9 //u3(0.392699, 1.570796, 4.712389) q[0]
u3(0.000000, 0.000000, 6.283185) q[6]; //cycle: 9 //u3(0.000000, 0.000000, 6.283185) q[2]
cx q[1],q[6]; //cycle: 10 //cx q[0],q[2]
u3(1.570796, 0.392699, 3.141593) q[1]; //cycle: 12 //u3(1.570796, 0.392699, 3.141593) q[0]
u3(1.570796, 0.785398, 3.141593) q[6]; //cycle: 12 //u3(1.570796, 0.785398, 3.141593) q[2]
cx q[1],q[6]; //cycle: 13 //cx q[0],q[2]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 15 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 15 //u3(1.570796, 0.000000, 3.141593) q[2]
cx q[1],q[6]; //cycle: 16 //cx q[0],q[2]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 18 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 18 //u3(1.570796, 0.000000, 3.141593) q[0]
cx q[1],q[6]; //cycle: 19 //cx q[0],q[2]
cx q[1],q[0]; //cycle: 21 //cx q[0],q[1]
cx q[2],q[6]; //cycle: 21 //cx q[4],q[2]
u3(0.000000, 0.000000, -0.196350) q[6]; //cycle: 23 //u3(0.000000, 0.000000, -0.196350) q[2]
u3(0.000000, 0.000000, -0.785398) q[0]; //cycle: 23 //u3(0.000000, 0.000000, -0.785398) q[1]
cx q[1],q[0]; //cycle: 24 //cx q[0],q[1]
cx q[2],q[6]; //cycle: 24 //cx q[4],q[2]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 26 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(0.000000, 0.000000, 0.785398) q[0]; //cycle: 26 //u3(0.000000, 0.000000, 0.785398) q[1]
u3(0.000000, 0.000000, 0.392699) q[2]; //cycle: 26 //u3(0.000000, 0.000000, 0.392699) q[4]
u3(0.000000, 0.000000, 0.196350) q[6]; //cycle: 26 //u3(0.000000, 0.000000, 0.196350) q[2]
swp q[0],q[5]; //cycle: 27
cx q[5],q[6]; //cycle: 33 //cx q[1],q[2]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 35 //u3(1.570796, 0.000000, 3.141593) q[1]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 35 //u3(1.570796, 0.000000, 3.141593) q[2]
cx q[5],q[6]; //cycle: 36 //cx q[1],q[2]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 38 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[5]; //cycle: 38 //u3(1.570796, 0.000000, 3.141593) q[1]
cx q[5],q[6]; //cycle: 39 //cx q[1],q[2]
cx q[2],q[6]; //cycle: 41 //cx q[4],q[2]
u3(0.000000, 0.000000, -0.392699) q[6]; //cycle: 43 //u3(0.000000, 0.000000, -0.392699) q[2]
cx q[2],q[6]; //cycle: 44 //cx q[4],q[2]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 46 //u3(0.000000, 0.000000, 0.785398) q[4]
u3(0.000000, 0.000000, 0.392699) q[6]; //cycle: 46 //u3(0.000000, 0.000000, 0.392699) q[2]
cx q[1],q[6]; //cycle: 47 //cx q[0],q[2]
cx q[3],q[2]; //cycle: 47 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 49 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 49 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 49 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 49 //u3(1.570796, 0.000000, 3.141593) q[4]
cx q[1],q[6]; //cycle: 50 //cx q[0],q[2]
cx q[3],q[2]; //cycle: 50 //cx q[3],q[4]
u3(1.570796, 0.000000, 3.141593) q[6]; //cycle: 52 //u3(1.570796, 0.000000, 3.141593) q[2]
u3(1.570796, 0.000000, 3.141593) q[1]; //cycle: 52 //u3(1.570796, 0.000000, 3.141593) q[0]
u3(1.570796, 0.000000, 3.141593) q[2]; //cycle: 52 //u3(1.570796, 0.000000, 3.141593) q[4]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 52 //u3(1.570796, 0.000000, 3.141593) q[3]
cx q[1],q[6]; //cycle: 53 //cx q[0],q[2]
cx q[3],q[2]; //cycle: 53 //cx q[3],q[4]
swp q[2],q[6]; //cycle: 55
cx q[3],q[2]; //cycle: 61 //cx q[3],q[2]
u3(0.000000, 0.000000, -0.785398) q[2]; //cycle: 63 //u3(0.000000, 0.000000, -0.785398) q[2]
cx q[3],q[2]; //cycle: 64 //cx q[3],q[2]
u3(1.570796, 0.000000, 3.141593) q[3]; //cycle: 66 //u3(1.570796, 0.000000, 3.141593) q[3]
u3(0.000000, 0.000000, 0.785398) q[2]; //cycle: 66 //u3(0.000000, 0.000000, 0.785398) q[2]
//71 original gates
//73 gates in generated circuit
//55 original depth (cycles)
//67 depth of generated circuit
//401 nodes popped from queue for processing.
//31 nodes remain in queue.
